<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <tool name="tube_nodes_script" label="bonfire_base Nodes Script" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/tube</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'pyrosource' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_bonfire_base (Sop/tube)
set _obj_geo1_bonfire_base = `run("opadd -e -n -v tube bonfire_base")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_bonfire_base
opparm -V 19.0.498 $_obj_geo1_bonfire_base cap ( on ) t ( 0 0.050000000000000003 0 ) height ( 0.10000000000000001 ) cols ( 48 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_bonfire_base
opexprlanguage -s hscript $_obj_geo1_bonfire_base
opset -p on $_obj_geo1_bonfire_base
opcf $arg1

# Node $_obj_geo1_pyrosource (Sop/pyrosource)
set _obj_geo1_pyrosource = `run("opadd -e -n -v pyrosource pyrosource")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1` $_obj_geo1_pyrosource
opparm $_obj_geo1_pyrosource  attributes ( 3 )
opparm $_obj_geo1_pyrosource mode ( 2 ) particlesep ( 0.025000000000000001 ) particlescale ( 1 ) attributes ( 3 ) attribute1 ( density ) attribute2 ( temperature ) attribute3 ( burn )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_pyrosource
opexprlanguage -s hscript $_obj_geo1_pyrosource
opuserdata -n '___Version___' -v '' $_obj_geo1_pyrosource
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_pyrosource
opuserdata -n '___toolid___' -v 'pyro_burn' $_obj_geo1_pyrosource
opset -p on $_obj_geo1_pyrosource

opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_bonfire_base -0 $_obj_geo1_pyrosource

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_pyrosource
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_bonfire_base
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="start_Axiom" label="Start_Axiom_Server" icon="opdef:/Sop/axiom_solver::3.1?IconImage">
    <script scriptType="python"><![CDATA[import subprocess

axiom_server = hou.getenv("AXIOM_3_1") + "/AxiomlicenseServerActivator.exe"
print(f"axiom: {axiom_server}")
subprocess.Popen([axiom_server], shell=True)]]></script>
  </tool>

  <tool name="subnet" label="Lookdev_setup1" icon="LOP_subnet">
    <helpURL>operator:Lop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Lop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'subnet' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_stage_Lookdev_setup1 (Lop/subnet)
set _stage_Lookdev_setup1 = `run("opadd -e -n -v subnet Lookdev_setup1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_stage_Lookdev_setup1
opcomment -c 'Referenced from Lookdev_setup' $_stage_Lookdev_setup1
opcolor -c 0.093999996781349182 0.36899998784065247 0.68999999761581421 $_stage_Lookdev_setup1
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -Y on -D off $_stage_Lookdev_setup1
opexprlanguage -s hscript $_stage_Lookdev_setup1
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1
opuserdata -n 'referenced_from' -v '../Lookdev_setup' $_stage_Lookdev_setup1
opuserdata -n 'wirestyle' -v 'rounded' $_stage_Lookdev_setup1
opcf $_stage_Lookdev_setup1

# Node $_stage_Lookdev_setup1_sublayer2 (Lop/sublayer)
set _stage_Lookdev_setup1_sublayer2 = `run("opadd -e -n -v sublayer sublayer2")`
oplocate -x `$arg2 + -1.9342600000000001` -y `$arg3 + 5.6406299999999998` $_stage_Lookdev_setup1_sublayer2
opparm $_stage_Lookdev_setup1_sublayer2  num_files ( 1 )
opparm -V 20.0.547 $_stage_Lookdev_setup1_sublayer2 parentlayer_group ( 1 ) composition_group ( 1 ) sublayerfile_group1 ( 1 ) filepath1 ( 'F:/Assets 3D/lookdev/CAVE_houdini_usdLookdevScene/usd/lookdevScene-last.usd' )
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_stage_Lookdev_setup1_sublayer2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -D off $_stage_Lookdev_setup1_sublayer2
opexprlanguage -s hscript $_stage_Lookdev_setup1_sublayer2
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_sublayer2

# Node $_stage_Lookdev_setup1_setvariant3 (Lop/setvariant)
set _stage_Lookdev_setup1_setvariant3 = `run("opadd -e -n -v setvariant setvariant3")`
oplocate -x `$arg2 + -1.93306` -y `$arg3 + 4.5809300000000004` $_stage_Lookdev_setup1_setvariant3
opparm $_stage_Lookdev_setup1_setvariant3  num_variants ( 1 )
opparm -V 20.0.547 $_stage_Lookdev_setup1_setvariant3 primpattern1 ( /lookdevSetup ) variantset1 ( lighting ) variantname1 ( softBoxes )
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_stage_Lookdev_setup1_setvariant3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -D off $_stage_Lookdev_setup1_setvariant3
opexprlanguage -s hscript $_stage_Lookdev_setup1_setvariant3
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_setvariant3

# Node $_stage_Lookdev_setup1_setvariant4 (Lop/setvariant)
set _stage_Lookdev_setup1_setvariant4 = `run("opadd -e -n -v setvariant setvariant4")`
oplocate -x `$arg2 + -1.93306` -y `$arg3 + 3.6375299999999999` $_stage_Lookdev_setup1_setvariant4
opparm $_stage_Lookdev_setup1_setvariant4  num_variants ( 1 )
opparm -V 20.0.547 $_stage_Lookdev_setup1_setvariant4 primpattern1 ( /lookdevSetup ) variantset1 ( colorSpace ) variantname1 ( ACES )
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_stage_Lookdev_setup1_setvariant4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on -D off $_stage_Lookdev_setup1_setvariant4
opexprlanguage -s hscript $_stage_Lookdev_setup1_setvariant4
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_setvariant4

# Node $_stage_Lookdev_setup1_merge_LDV_setup (Lop/merge)
set _stage_Lookdev_setup1_merge_LDV_setup = `run("opadd -e -n -v merge merge_LDV_setup")`
oplocate -x `$arg2 + 3.0853000000000002` -y `$arg3 + 1.2261` $_stage_Lookdev_setup1_merge_LDV_setup
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_stage_Lookdev_setup1_merge_LDV_setup
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -D off $_stage_Lookdev_setup1_merge_LDV_setup
opexprlanguage -s hscript $_stage_Lookdev_setup1_merge_LDV_setup
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_merge_LDV_setup

# Node $_stage_Lookdev_setup1_domelight5 (Lop/domelight::2.0)
set _stage_Lookdev_setup1_domelight5 = `run("opadd -e -n -v domelight::2.0 domelight5")`
oplocate -x `$arg2 + 3.1065` -y `$arg3 + 3.90985` $_stage_Lookdev_setup1_domelight5
opspareds '    groupcollapsible {         name    "sample_group3"         label   "Frame Range/Subframes"         grouptag { "group_type" "collapsible" }         parmtag { "sidefx::header_parm" "sample_behavior" }         grouptag { "sidefx::switcher" "sample_group2" }          parm {             name    "sample_behavior"             baseparm             label   "Sampling Behavior"             export  none         }         parm {             name    "sample_f"             baseparm             label   "Start/End/Inc"             export  none         }         parm {             name    "sample_subframeenable"             baseparm             label   "Subframe Sampling"             export  none         }         groupsimple {             name    "sample_subframegroup3"             label   "Subframe Sampling"             disablewhen "{ sample_subframeenable == 0 }"             grouptag { "group_type" "simple" }             parmtag { "sidefx::header_toggle" "sample_subframeenable" }             grouptag { "sidefx::switcher" "sample_subframegroup2" }              parm {                 name    "sample_shuttermode"                 baseparm                 label   "Shutter"                 export  none             }             parm {                 name    "sample_shutterrange"                 baseparm                 label   "Shutter Open/Close"                 export  none             }             parm {                 name    "sample_cameraprim"                 baseparm                 label   "Camera Prim"                 export  none             }             parm {                 name    "sample_count"                 baseparm                 label   "Samples"                 export  none             }             parm {                 name    "sample_includeframe"                 baseparm                 label   "Always Include Frame Sample"                 export  none             }         }      }      parm {         name    "primpattern"         baseparm         label   "Primitives"         export  none     }     parm {         name    "primpath"         baseparm         label   "Primitive Path"         export  none     }     parm {         name    "createprims"         baseparm         label   "Action"         export  none     }     parm {         name    "initforedit"         baseparm         label   "Initialize Parameters"         export  none     }     parm {         name    "primtype"         baseparm         label   "Primitive Type"         invisible         export  none     }     parm {         name    "specifier"         baseparm         label   "Primitive Specifier"         invisible         export  none     }     parm {         name    "classancestor"         baseparm         label   "Class Ancestor"         invisible         export  none     }     parm {         name    "parentprimtype"         baseparm         label   "Parent Primitive Type"         invisible         export  none     }     group {         name    "folder1"         label   "Transform"         parmtag { "group_default" "1" }          parm {             name    "xn__xformOptransform_control_6fb"             baseparm             label   "Transform"             export  none         }         parm {             name    "xn__xformOptransform_51a"             baseparm             label   "Operator Order"             export  none         }         parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  none         }         parm {             name    "r"             baseparm             label   "Rotate"             export  none         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "shear"             baseparm             label   "Shear"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         groupcollapsible {             name    "pivotxform2"             label   "Pivot Transform"             disablewhen "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }"             grouptag { "group_type" "collapsible" }              parm {                 name    "p"                 baseparm                 label   "Pivot Translate"                 export  none             }             parm {                 name    "pr"                 baseparm                 label   "Pivot Rotate"                 export  none             }         }      }      group {         name    "folder1_1"         label   "Base Properties"         grouptag { "group_default" "1" }          parm {             name    "xn__inputsintensity_control_jeb"             baseparm             label   "Intensity"             export  none         }         parm {             name    "xn__inputsintensity_i0a"             baseparm             label   "Intensity"             export  none         }         parm {             name    "xn__inputsexposure_control_wcb"             baseparm             label   "Exposure"             export  none         }         parm {             name    "xn__inputsexposure_vya"             baseparm             label   "Exposure"             export  none         }         parm {             name    "xn__inputscolor_control_06a"             baseparm             label   "Color"             export  none         }         parm {             name    "xn__inputscolor_zta"             baseparm             label   "Color"             export  none         }         parm {             name    "xn__inputsenableColorTemperature_control_pzb"             baseparm             label   "EnableColorTemperature"             export  none         }         parm {             name    "xn__inputsenableColorTemperature_omb"             baseparm             label   "Enable Color Temperature"             export  none         }         parm {             name    "xn__inputscolorTemperature_control_xpb"             baseparm             label   "ColorTemperature"             export  none         }         parm {             name    "xn__inputscolorTemperature_wcb"             baseparm             label   "Color Temperature"             export  none         }         parm {             name    "xn__inputstexturefile_control_shbh"             baseparm             label   "Texture"             export  none         }         parm {             name    "xn__inputstexturefile_r3ah"             baseparm             label   "Texture"             export  none         }         parm {             name    "xn__inputstextureformat_control_1kbh"             baseparm             label   "Format"             export  none         }         parm {             name    "xn__inputstextureformat_06ah"             baseparm             label   "Format"             export  none         }         parm {             name    "filters_control"             baseparm             label   "Filters"             export  none         }         parm {             name    "filters"             baseparm             label   "Filters"             export  none         }         parm {             name    "portals_control"             baseparm             label   "Portals"             export  none         }         parm {             name    "portals"             baseparm             label   "Portals"             export  none         }         parm {             name    "xn__inputsnormalize_control_jeb"             baseparm             label   "Normalize"             export  none         }         parm {             name    "xn__inputsnormalize_i0a"             baseparm             label   "Normalize Power"             export  none         }         parm {             name    "xn__inputsdiffuse_control_99a"             baseparm             label   "Diffuse"             export  none         }         parm {             name    "xn__inputsdiffuse_8wa"             baseparm             label   "Diffuse Multiplier"             export  none         }         parm {             name    "xn__inputsspecular_control_wcb"             baseparm             label   "Specular"             export  none         }         parm {             name    "xn__inputsspecular_vya"             baseparm             label   "Specular Multiplier"             export  none         }         parm {             name    "xn__houdiniguidescale_control_thb"             baseparm             label   "houdini:guidescale"             export  none         }         parm {             name    "xn__houdiniguidescale_s3a"             baseparm             label   "Scale Guide Geometry"             export  none         }         parm {             name    "xn__houdiniinviewermenu_control_2kb"             baseparm             label   "Show in Viewport Camera Menu"             export  none         }         parm {             name    "xn__houdiniinviewermenu_16a"             baseparm             label   "Show in Viewport Camera Menu"             export  none         }         parm {             name    "xn__lightfilters_control_m8a"             baseparm             label   "light:filters"             export  none         }         parm {             name    "xn__lightfilters_lva"             baseparm             label   "Light Filters"             export  none         }     }      group {         name    "folder1_2"         label   "Shadow"         grouptag { "group_default" "1" }          parm {             name    "xn__inputsshadowenable_control_fjbg"             baseparm             label   "Enable"             export  none         }         parm {             name    "xn__inputsshadowenable_e5ag"             baseparm             label   "Enable"             export  none         }         parm {             name    "xn__inputsshadowcolor_control_shbg"             baseparm             label   "Color"             export  none         }         parm {             name    "xn__inputsshadowcolor_r3ag"             baseparm             label   "Color"             export  none         }         parm {             name    "xn__inputsshadowdistance_control_ombg"             baseparm             label   "Distance"             export  none         }         parm {             name    "xn__inputsshadowdistance_n8ag"             baseparm             label   "Distance"             export  none         }     }      group {         name    "folder1_3"         label   "Arnold"         grouptag { "group_default" "1" }          groupcollapsible {             name    "arnold_light_group"             label   "Light"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "arnoldsamples_control"                 label   "samples"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldsamples_cbbg"                 label   "Samples"                 type    integer                 default { "1" }                 disablewhen "{ arnoldsamples_control == block } { arnoldsamples_control == none }"                 range   { 0! 8 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "arnoldvolume_samples_control"                 label   "volume_samples"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldvolume_samples_qmbg"                 label   "Volume Samples"                 type    integer                 default { "2" }                 disablewhen "{ arnoldvolume_samples_control == block } { arnoldvolume_samples_control == none }"                 range   { 0! 8 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "arnoldroundness_control"                 label   "roundness"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldroundness_lebg"                 label   "Roundness"                 type    float                 default { "0" }                 disablewhen "{ arnoldroundness_control == block } { arnoldroundness_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldangle_control"                 label   "angle"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldangle_26ag"                 label   "Angle"                 type    float                 default { "0" }                 disablewhen "{ arnoldangle_control == block } { arnoldangle_control == none }"                 range   { 0! 90 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldspread_control"                 label   "spread"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldspread_p8ag"                 label   "Spread"                 type    float                 default { "1" }                 disablewhen "{ arnoldspread_control == block } { arnoldspread_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldsoft_edge_control"                 label   "soft_edge"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldsoft_edge_lebg"                 label   "Soft Edge"                 type    float                 default { "0" }                 disablewhen "{ arnoldsoft_edge_control == block } { arnoldsoft_edge_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldportal_control"                 label   "portal"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldportal_p8ag"                 label   "Portal"                 type    toggle                 default { "0" }                 disablewhen "{ arnoldportal_control == block } { arnoldportal_control == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "arnoldportal_mode_control"                 label   "portal_mode"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldportal_mode_uhbg"                 label   "Portal Mode"                 type    string                 default { "off" }                 disablewhen "{ arnoldportal_mode_control == block } { arnoldportal_mode_control == none }"                 menu {                     "off"               "Off"                     "interior_only"     "Interior Only"                     "interior_exterior" "Interior Exterior"                 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "arnoldresolution_control"                 label   "resolution"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldresolution_7fbg"                 label   "Resolution"                 type    integer                 default { "512" }                 disablewhen "{ arnoldresolution_control == block } { arnoldresolution_control == none }"                 range   { 0! 1024 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }         }          groupcollapsible {             name    "arnold_shadows_group"             label   "Shadows"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "arnoldshadow_color_control"                 label   "shadow_color"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float3\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldshadow_color_hjbg"                 label   "Shadow Color"                 type    color                 size    3                 default { "0" "0" "0" }                 disablewhen "{ arnoldshadow_color_control == block } { arnoldshadow_color_control == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float3" }             }             parm {                 name    "arnoldshadow_density_control"                 label   "shadow_density"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldshadow_density_qmbg"                 label   "Shadow Density"                 type    float                 default { "0" }                 disablewhen "{ arnoldshadow_density_control == block } { arnoldshadow_density_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldcast_shadows_control"                 label   "cast_shadows"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldcast_shadows_hjbg"                 label   "Cast Shadows"                 type    toggle                 default { "1" }                 disablewhen "{ arnoldcast_shadows_control == block } { arnoldcast_shadows_control == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "arnoldcast_volumetric_shadows_control"                 label   "cast_volumetric_shadows"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldcast_volumetric_shadows_e1bg"                 label   "Cast Volumetric Shadows"                 type    toggle                 default { "1" }                 disablewhen "{ arnoldcast_volumetric_shadows_control == block } { arnoldcast_volumetric_shadows_control == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }         }          groupcollapsible {             name    "arnold_contribution_group"             label   "Contribution"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "arnoldcamera_control"                 label   "camera"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldcamera_p8ag"                 label   "Camera"                 type    float                 default { "1" }                 disablewhen "{ arnoldcamera_control == block } { arnoldcamera_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnolddiffuse_control"                 label   "diffuse"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnolddiffuse_cbbg"                 label   "Diffuse"                 type    float                 default { "1" }                 disablewhen "{ arnolddiffuse_control == block } { arnolddiffuse_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldspecular_control"                 label   "specular"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldspecular_ycbg"                 label   "Specular"                 type    float                 default { "1" }                 disablewhen "{ arnoldspecular_control == block } { arnoldspecular_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldtransmission_control"                 label   "transmission"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldtransmission_hjbg"                 label   "Transmission"                 type    float                 default { "1" }                 disablewhen "{ arnoldtransmission_control == block } { arnoldtransmission_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldsss_control"                 label   "sss"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldsss_t3ag"                 label   "SubSurface"                 type    float                 default { "1" }                 disablewhen "{ arnoldsss_control == block } { arnoldsss_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldvolume_control"                 label   "volume"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldvolume_p8ag"                 label   "Volume"                 type    float                 default { "1" }                 disablewhen "{ arnoldvolume_control == block } { arnoldvolume_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldindirect_control"                 label   "indirect"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldindirect_ycbg"                 label   "Indirect"                 type    float                 default { "1" }                 disablewhen "{ arnoldindirect_control == block } { arnoldindirect_control == none }"                 range   { 0! 1 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "arnoldmax_bounces_control"                 label   "max_bounces"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldmax_bounces_uhbg"                 label   "Max Bounces"                 type    integer                 default { "999" }                 disablewhen "{ arnoldmax_bounces_control == block } { arnoldmax_bounces_control == none }"                 range   { 0! 1000 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "arnoldaov_control"                 label   "aov"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaov_t3ag"                 label   "AOV Light Group"                 type    string                 default { "" }                 help    "Write out the light contribution to a separate AOV subset with a corresponding name. For example, all lights with this parameter set to \\"fill\\" will contribute to the \\"RGBA_fill\\" and \\"volume_fill\\" AOVs, which then contain a subset of the light from the RGBA and volume AOVs respectively. Emission from other sources and lights that have not been assigned an aov name will contribute to the \\"RGBA_default\\" and \\"volume_default\\" AOVs. All light AOVs can be output to a single EXR driver using output syntax like \\"RGBA_*\\". For the time being, light AOVs are only supported for volumes, and lighting from surfaces and the atmosphere will end up in the default light AOV. A maximum of 8 different light AOVs are supported, although a given AOV can contain a bundle of any number of lights."                 disablewhen "{ arnoldaov_control == block } { arnoldaov_control == none }"                 menureplace {                     [ "__import__(\'htoa.properties\').properties.solarisLightAovMenu()" ]                     language python                 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }         }          groupcollapsible {             name    "arnold_shaders_group"             label   "Shaders"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "arnoldshaders_control"                 label   "shaders"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldshaders_cbbg"                 label   "Shaders"                 type    string                 default { "" }                 disablewhen "{ arnoldshaders_control == block } { arnoldshaders_control == none }"                 parmtag { "script_action" "import loputils\\nkwargs[\'ctrl\'] = True\\nloputils.selectPrimsInParm(kwargs, False)" }                 parmtag { "script_action_help" "Select a primitive using the primitive picker dialog" }                 parmtag { "script_action_icon" "BUTTONS_reselect" }                 parmtag { "sidefx::usdpathtype" "prim" }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }         }      }      group {         name    "folder1_4"         label   "Karma"         grouptag { "group_default" "1" }          groupcollapsible {             name    "Sampling"             label   "Sampling"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__karmalightmisbias_control_rhbf"                 label   "MIS Bias"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightmisbias_q3af"                 label   "MIS Bias"                 type    float                 default { "0" }                 disablewhen "{ xn__karmalightmisbias_control_rhbf == block } { xn__karmalightmisbias_control_rhbf == none }"                 range   { -1! 1! }                 parmtag { "spare_category" "Sampling" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__karmalightsamplingquality_control_subf"                 label   "Sampling Quality"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightsamplingquality_rhbf"                 label   "Sampling Quality"                 type    float                 default { "1" }                 disablewhen "{ xn__karmalightsamplingquality_control_subf == block } { xn__karmalightsamplingquality_control_subf == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Sampling" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__karmalightforce_uniform_sampling_control_65bf"                 label   "Force Uniform Sampling"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightforce_uniform_sampling_5sbf"                 label   "Force Uniform Sampling"                 type    toggle                 default { "0" }                 disablewhen "{ xn__karmalightforce_uniform_sampling_control_65bf == block } { xn__karmalightforce_uniform_sampling_control_65bf == none }"                 parmtag { "spare_category" "Sampling" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__karmalighthdri_max_isize_control_5sbf"                 label   "Maximum HDRI Size"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalighthdri_max_isize_4fbf"                 label   "Maximum HDRI Size"                 type    integer                 default { "2048" }                 disablewhen "{ xn__karmalighthdri_max_isize_control_5sbf == block } { xn__karmalighthdri_max_isize_control_5sbf == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Sampling" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__karmalightportalmisbias_control_jrbf"                 label   "Portal MIS Bias"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightportalmisbias_iebf"                 label   "Portal MIS Bias"                 type    float                 default { "0" }                 disablewhen "{ xn__karmalightportalmisbias_control_jrbf == block } { xn__karmalightportalmisbias_control_jrbf == none }"                 range   { -1! 1! }                 parmtag { "spare_category" "Sampling" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "float" }             }         }          groupcollapsible {             name    "Light"             label   "Light"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__karmalightcontribs_control_ejbf"                 label   "Contributions"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightcontribs_d5af"                 label   "Contributions"                 type    string                 default { "*" }                 disablewhen "{ xn__karmalightcontribs_control_ejbf == block } { xn__karmalightcontribs_control_ejbf == none }"                 menureplace {                     "*"                         "Any"                     "diffuse"                   "Diffuse"                     "reflect"                   "Reflect"                     "coat"                      "Coat"                     "sss"                       "SSS"                     "volume"                    "Volume"                     "diffuse|volume|sss"        "Any diffuse"                     "-diffuse & -volume & -sss" "Any non-diffuse"                 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__karmalightshader_control_4fbf"                 label   "Light Shader"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightshader_31af"                 label   "Light Shader"                 type    string                 default { "" }                 disablewhen "{ xn__karmalightshader_control_4fbf == block } { xn__karmalightshader_control_4fbf == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__karmalightattentype_control_0kbf"                 label   "Attenuation Type"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightattentype_z6af"                 label   "Attenuation Type"                 type    string                 default { "physical" }                 disablewhen "{ xn__karmalightattentype_control_0kbf == block } { xn__karmalightattentype_control_0kbf == none }"                 menu {                     "none"      "No Attenuation"                     "half"      "Half Distance Attenuation"                     "physical"  "Physically Correct"                 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__karmalightattenstart_control_nmbf"                 label   "Attenuation Start"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightattenstart_m8af"                 label   "Attenuation Start"                 type    float                 default { "0" }                 disablewhen "{ xn__karmalightattenstart_control_nmbf == block } { xn__karmalightattenstart_control_nmbf == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__karmalightatten_control_iebf"                 label   "Half Distance Attenuation"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightatten_h0af"                 label   "Half Distance Attenuation"                 type    float                 default { "100000" }                 disablewhen "{ xn__karmalightatten_control_iebf == block } { xn__karmalightatten_control_iebf == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__karmalightactiveradius_control_wpbf"                 label   "Active Radius"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightactiveradius_vcbf"                 label   "Active Radius"                 type    float                 default { "-1" }                 disablewhen "{ xn__karmalightactiveradius_control_wpbf == block } { xn__karmalightactiveradius_control_wpbf == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__karmalightsinglesided_control_9nbf"                 label   "Single Sided"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightsinglesided_89af"                 label   "Single Sided"                 type    toggle                 default { "1" }                 disablewhen "{ xn__karmalightsinglesided_control_9nbf == block } { xn__karmalightsinglesided_control_9nbf == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__karmalightrenderlightgeo_control_5sbf"                 label   "Render Light Geometry"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightrenderlightgeo_4fbf"                 label   "Render Light Geometry"                 type    toggle                 default { "0" }                 disablewhen "{ xn__karmalightrenderlightgeo_control_5sbf == block } { xn__karmalightrenderlightgeo_control_5sbf == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__karmalightlightgeocastsshadow_control_b1bf"                 label   "Light Geometry Casts Shadow"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightlightgeocastsshadow_9nbf"                 label   "Light Geometry Casts Shadow"                 type    toggle                 default { "0" }                 disablewhen "{ xn__karmalightlightgeocastsshadow_control_b1bf == block } { xn__karmalightlightgeocastsshadow_control_b1bf == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__karmalightlpetag_control_4fbf"                 label   "LPE Tag"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightlpetag_31af"                 label   "LPE Tag"                 type    string                 default { "" }                 disablewhen "{ xn__karmalightlpetag_control_4fbf == block } { xn__karmalightlpetag_control_4fbf == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__karmalightillumbackground_control_subf"                 label   "Illuminate Background Holdout"                 type    string                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__karmalightillumbackground_rhbf"                 label   "Illuminate Background Holdout"                 type    toggle                 default { "0" }                 disablewhen "{ xn__karmalightillumbackground_control_subf == block } { xn__karmalightillumbackground_control_subf == none }"                 parmtag { "spare_category" "Light" }                 parmtag { "uiscope" "None" }                 parmtag { "usdapischema" "KarmaLightAPI" }                 parmtag { "usdvaluetype" "bool" }             }         }      }  ' $_stage_Lookdev_setup1_domelight5
chblockbegin
chadd -t 0 0 $_stage_Lookdev_setup1_domelight5 sample_f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropstart $_stage_Lookdev_setup1_domelight5/sample_f1
chadd -t 0 0 $_stage_Lookdev_setup1_domelight5 sample_f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F @ropend $_stage_Lookdev_setup1_domelight5/sample_f2
chadd -t 0 0 $_stage_Lookdev_setup1_domelight5 sample_f3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropinc $_stage_Lookdev_setup1_domelight5/sample_f3
chadd -t 0 0 $_stage_Lookdev_setup1_domelight5 xn__houdiniguidescale_s3a
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1 / __import__(\'loputils\').getMetersPerUnit(pwd())' -l p $_stage_Lookdev_setup1_domelight5/xn__houdiniguidescale_s3a
chblockend
opparm -V 2.0 $_stage_Lookdev_setup1_domelight5 sample_f ( sample_f1 sample_f2 sample_f3 ) folder0 ( 1 0 0 ) xn__inputsexposure_vya ( -6.17 ) xn__inputsenableColorTemperature_omb ( on ) xn__inputstexturefile_r3ah ( 'F:/Assets 3D/HDRI/3DCollective_Real_Light_24HDRi_Pro_Pack03_4K.zip/3DCollective_HDRi_098_1830_4K.hdr' ) xn__inputstextureformat_06ah ( latlong ) folder1 ( 1 0 0 0 0 ) arnold_light_group ( 1 ) arnold_shadows_group ( 1 ) arnold_contribution_group ( 1 ) arnold_shaders_group ( 1 ) Sampling ( 1 ) Light ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -D off $_stage_Lookdev_setup1_domelight5
opexprlanguage -s hscript $_stage_Lookdev_setup1_domelight5
opuserdata -n '___Version___' -v '2.0' $_stage_Lookdev_setup1_domelight5

# Node $_stage_Lookdev_setup1_mute_light (Lop/configureprimitive)
set _stage_Lookdev_setup1_mute_light = `run("opadd -e -n -v configureprimitive mute_light")`
oplocate -x `$arg2 + -1.93306` -y `$arg3 + 2.54623` $_stage_Lookdev_setup1_mute_light
opspareds '    parm {         name    "primpattern"         baseparm         label   "Primitives"         export  none     }     parm {         name    "settype"         baseparm         label   "Set Type"         joinnext         export  none     }     parm {         name    "type"         baseparm         label   "Type"         export  none     }     parm {         name    "setspecifier"         baseparm         label   "Set Specifier"         joinnext         export  none     }     parm {         name    "specifier"         baseparm         label   "Primitive Specifier"         export  none     }     parm {         name    "setpurpose"         baseparm         label   "Set Purpose"         joinnext         export  none     }     parm {         name    "purpose"         baseparm         label   "Purpose"         export  none     }     parm {         name    "setproxy"         baseparm         label   "Set Proxy Primitive"         joinnext         export  none     }     parm {         name    "proxy"         baseparm         label   "Proxy Primitive"         export  none     }     parm {         name    "setkind"         baseparm         label   "Set Kind"         joinnext         export  none     }     parm {         name    "kind"         baseparm         label   "Kind"         export  none     }     parm {         name    "setinstanceable"         baseparm         label   "Set Instanceable"         joinnext         export  none     }     parm {         name    "instanceable"         baseparm         label   "Instanceable"         export  none     }     parm {         name    "setdrawmode"         baseparm         label   "Set Draw Mode"         joinnext         export  none     }     parm {         name    "drawmode"         baseparm         label   "Draw Mode"         export  none     }     parm {         name    "setvisibility"         baseparm         label   "Set Visibility"         joinnext         export  none     }     parm {         name    "visibility"         baseparm         label   "Visibility"         export  none     }     parm {         name    "setactivation"         baseparm         label   "Set Activation"         joinnext         export  none     }     parm {         name    "activation"         baseparm         label   "Activation"         export  none     }     parm {         name    "setassetidentifier"         baseparm         label   "Asset Identifier"         joinnext         export  none     }     parm {         name    "assetidentifier"         baseparm         label   "Asset Identifier"         export  none     }     parm {         name    "setassetname"         baseparm         label   "Asset Name"         joinnext         export  none     }     parm {         name    "assetname"         baseparm         label   "Asset Name"         export  none     }     parm {         name    "setassetversion"         baseparm         label   "Asset Version"         joinnext         export  none     }     parm {         name    "assetversion"         baseparm         label   "Asset Version"         export  none     }     parm {         name    "setassetdependencies"         baseparm         label   "Asset Dependencies"         joinnext         export  none     }     parm {         name    "assetdependencies"         baseparm         label   "Asset Dependencies"         export  none     }     multiparm {         name    "assetinfocount"         label    "Asset Info Count"         baseparm         default 0          parm {             name    "assetinfoname#"             baseparm             label   "Asset Info Name"             export  none         }         parm {             name    "assetinfotype#"             baseparm             label   "Asset Info Type"             export  none         }         parm {             name    "assetinfostrvalue#"             baseparm             label   "Asset Info Value"             export  none         }         parm {             name    "assetinfofloatvalue#"             baseparm             label   "Asset Info Value"             export  none         }         parm {             name    "assetinfointvalue#"             baseparm             label   "Asset Info Value"             export  none         }         parm {             name    "assetinfoboolvalue#"             baseparm             label   "Asset Info Value is True"             export  none         }     }      parm {         name    "seticon"         baseparm         label   "Icon"         joinnext         export  none     }     parm {         name    "icon"         baseparm         label   "Icon"         export  none     }     parm {         name    "seteditable"         baseparm         label   "Allow LOPs to Edit This Primitive"         joinnext         export  none     }     parm {         name    "editable"         baseparm         label   "Allow LOPs to Edit This Primitive"         export  none     }     parm {         name    "setselectable"         baseparm         label   "Allow Viewport Selecton of This Primitive"         joinnext         export  none     }     parm {         name    "selectable"         baseparm         label   "Allow Viewport Selecton of This Primitive"         export  none     }     parm {         name    "sethideinui"         baseparm         label   "Hide Primitive In Scene Graph Trees"         joinnext         export  none     }     parm {         name    "hideinui"         baseparm         label   "Hide Primitive In Scene Graph Trees"         export  none     }     parm {         name    "setapischemas"         baseparm         label   "Apply API Schemas"         joinnext         export  none     }     parm {         name    "apischemas"         baseparm         label   "Apply API Schemas"         export  none     }     multiparm {         name    "customdatacount"         label    "Custom Data Count"         baseparm         default 0          parm {             name    "customdataname#"             baseparm             label   "Custom Data Name"             export  none         }         parm {             name    "customdatatype#"             baseparm             label   "Custom Data Type"             export  none         }         parm {             name    "customdatastrvalue#"             baseparm             label   "Custom Data Value"             export  none         }         parm {             name    "customdatafloatvalue#"             baseparm             label   "Custom Data Value"             export  none         }         parm {             name    "customdataintvalue#"             baseparm             label   "Custom Data Value"             export  none         }         parm {             name    "customdataboolvalue#"             baseparm             label   "Custom Data Value is True"             export  none         }     }      parm {         name    "sample_f1"         label   "sample_f1"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sample_f2"         label   "sample_f2"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sample_f3"         label   "sample_f3"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sample_behavior"         baseparm         label   "Sampling Behavior"         export  none     }     parm {         name    "sample_f"         baseparm         label   "Start/End/Inc"         export  none     }     parm {         name    "sample_subframeenable"         baseparm         label   "Subframe Sampling"         export  none     }     parm {         name    "sample_shuttermode"         baseparm         label   "Shutter"         export  none     }     parm {         name    "sample_shutterrange"         baseparm         label   "Shutter Open/Close"         export  none     }     parm {         name    "sample_cameraprim"         baseparm         label   "Camera Prim"         export  none     }     parm {         name    "sample_count"         baseparm         label   "Samples"         export  none     }     parm {         name    "sample_includeframe"         baseparm         label   "Always Include Frame Sample"         export  none     }     parm {         name    "setextents"         baseparm         label   "Set Extents"         export  none     }     parm {         name    "extents"         baseparm         label   "Set Extents"         export  none     }     parm {         name    "fixkindhierarchy"         baseparm         label   "Fix Kind Hierarchy"         export  none     }     parm {         name    "setapplydrawmode"         baseparm         label   "Set Apply Draw Mode On This Primitive"         export  none     }     parm {         name    "applydrawmode"         baseparm         label   "Apply Draw Mode On This Primitive"         export  none     }     parm {         name    "setdrawmodecolor"         baseparm         label   "Set Draw Mode Color"         export  none     }     parm {         name    "drawmodecolor"         baseparm         label   "Draw Mode Color"         export  none     }     parm {         name    "setcardgeometry"         baseparm         label   "Set Card Geometry"         export  none     }     parm {         name    "cardgeometry"         baseparm         label   "Card Geometry"         export  none     }     parm {         name    "setcardtexturexneg"         baseparm         label   "Set -X Texture"         export  none     }     parm {         name    "cardtexturexneg"         baseparm         label   "-X Texture"         export  none     }     parm {         name    "setcardtexturexpos"         baseparm         label   "Set +X Texture"         export  none     }     parm {         name    "cardtexturexpos"         baseparm         label   "+X Texture"         export  none     }     parm {         name    "setcardtextureyneg"         baseparm         label   "Set -Y Texture"         export  none     }     parm {         name    "cardtextureyneg"         baseparm         label   "-Y Texture"         export  none     }     parm {         name    "setcardtextureypos"         baseparm         label   "Set +Y Texture"         export  none     }     parm {         name    "cardtextureypos"         baseparm         label   "+Y Texture"         export  none     }     parm {         name    "setcardtexturezneg"         baseparm         label   "Set -Z Texture"         export  none     }     parm {         name    "cardtexturezneg"         baseparm         label   "-Z Texture"         export  none     }     parm {         name    "setcardtexturezpos"         baseparm         label   "Set +Z Texture"         export  none     }     parm {         name    "cardtexturezpos"         baseparm         label   "+Z Texture"         export  none     } ' $_stage_Lookdev_setup1_mute_light
opparm $_stage_Lookdev_setup1_mute_light  assetinfocount ( 0 ) customdatacount ( 0 )
chblockbegin
chadd -t 0 0 $_stage_Lookdev_setup1_mute_light sample_f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @fstart $_stage_Lookdev_setup1_mute_light/sample_f1
chadd -t 0 0 $_stage_Lookdev_setup1_mute_light sample_f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F @fend $_stage_Lookdev_setup1_mute_light/sample_f2
chadd -t 0 0 $_stage_Lookdev_setup1_mute_light sample_f3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @finc $_stage_Lookdev_setup1_mute_light/sample_f3
chadd -t 0 0 $_stage_Lookdev_setup1_mute_light sample_f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @fstart $_stage_Lookdev_setup1_mute_light/sample_f1
chadd -t 0 0 $_stage_Lookdev_setup1_mute_light sample_f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F @fend $_stage_Lookdev_setup1_mute_light/sample_f2
chadd -t 0 0 $_stage_Lookdev_setup1_mute_light sample_f3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @finc $_stage_Lookdev_setup1_mute_light/sample_f3
chblockend
opparm -V 20.0.547 $_stage_Lookdev_setup1_mute_light primpattern ( /lookdevSetup/lights ) setactivation ( on ) activation ( off ) sample_f1 ( sample_f1 ) sample_f2 ( sample_f2 ) sample_f3 ( sample_f3 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on -D off $_stage_Lookdev_setup1_mute_light
opexprlanguage -s hscript $_stage_Lookdev_setup1_mute_light
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_mute_light

# Node $_stage_Lookdev_setup1_cam_lookdev (Lop/camera)
set _stage_Lookdev_setup1_cam_lookdev = `run("opadd -e -n -v camera cam_lookdev")`
oplocate -x `$arg2 + 7.2839999999999998` -y `$arg3 + 4.1132999999999997` $_stage_Lookdev_setup1_cam_lookdev
opspareds '    groupcollapsible {         name    "sample_group3"         label   "Frame Range/Subframes"         grouptag { "group_type" "collapsible" }         parmtag { "sidefx::header_parm" "sample_behavior" }          parm {             name    "sample_behavior"             baseparm             label   "Sampling Behavior"             export  none         }         parm {             name    "sample_f"             baseparm             label   "Start/End/Inc"             export  none         }         parm {             name    "sample_subframeenable"             baseparm             label   "Subframe Sampling"             export  none         }         groupsimple {             name    "sample_subframegroup3"             label   "Subframe Sampling"             disablewhen "{ sample_subframeenable == 0 }"             grouptag { "group_type" "simple" }             parmtag { "sidefx::header_toggle" "sample_subframeenable" }              parm {                 name    "sample_shuttermode"                 baseparm                 label   "Shutter"                 export  none             }             parm {                 name    "sample_shutterrange"                 baseparm                 label   "Shutter Open/Close"                 export  none             }             parm {                 name    "sample_cameraprim"                 baseparm                 label   "Camera Prim"                 export  none             }             parm {                 name    "sample_count"                 baseparm                 label   "Samples"                 export  none             }             parm {                 name    "sample_includeframe"                 baseparm                 label   "Always Include Frame Sample"                 export  none             }         }      }      parm {         name    "primpattern"         baseparm         label   "Primitives"         export  none     }     parm {         name    "primpath"         baseparm         label   "Primitive Path"         export  none     }     parm {         name    "createprims"         baseparm         label   "Action"         export  none     }     parm {         name    "initforedit"         baseparm         label   "Initialize Parameters"         export  none     }     parm {         name    "primcount"         baseparm         label   "Primitive Count"         invisible         export  none     }     parm {         name    "primtype"         baseparm         label   "Primitive Type"         invisible         export  none     }     parm {         name    "primkind"         baseparm         label   "Primitive Kind"         invisible         export  none     }     parm {         name    "specifier"         baseparm         label   "Primitive Specifier"         invisible         export  none     }     parm {         name    "classancestor"         baseparm         label   "Class Ancestor"         invisible         export  none     }     parm {         name    "parentprimtype"         baseparm         label   "Parent Primitive Type"         invisible         export  none     }     group {         name    "folder2"         label   "Transform"          parm {             name    "xn__xformOptransform_control_6fb"             baseparm             label   "xformOp:transform"             export  none         }         parm {             name    "xn__xformOptransform_51a"             baseparm             label   "xformOp:transform"             export  none         }         parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  none         }         parm {             name    "r"             baseparm             label   "Rotate"             export  none         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "shear"             baseparm             label   "Shear"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         groupcollapsible {             name    "parmgroup_pivotxform2"             label   "Pivot Transform"             disablewhen "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }"             grouptag { "group_type" "collapsible" }              parm {                 name    "p"                 baseparm                 label   "Pivot Translate"                 export  none             }             parm {                 name    "pr"                 baseparm                 label   "Pivot Rotate"                 export  none             }         }          groupcollapsible {             name    "folder3"             label   "Constraints"             grouptag { "group_type" "collapsible" }              parm {                 name    "lookatenable"                 baseparm                 label   "Enable Look At"                 export  none             }             parm {                 name    "keepposition"                 baseparm                 label   "Keep Position"                 export  none             }             parm {                 name    "lookatposition"                 baseparm                 label   "Look At Position"                 export  none             }             parm {                 name    "lookatprim"                 baseparm                 label   "Look At Primitive"                 export  none             }             parm {                 name    "lookatprimpos"                 baseparm                 label   "Look At Primitive Position"                 invisible                 export  none             }             parm {                 name    "lookatprimrot"                 baseparm                 label   "Look At Primitive Rotation"                 invisible                 export  none             }             parm {                 name    "upvecmethod"                 baseparm                 label   "Up Vector Method"                 export  none             }             parm {                 name    "upvec"                 baseparm                 label   "Up Vector"                 export  none             }             parm {                 name    "twist"                 baseparm                 label   "Twist"                 export  none             }         }      }      group {         name    "folder2_1"         label   "View"          parm {             name    "projection_control"             baseparm             label   "Projection"             export  none         }         parm {             name    "projection"             baseparm             label   "Projection"             export  none         }         parm {             name    "clippingRange_control"             baseparm             label   "Clipping Range"             export  none         }         parm {             name    "clippingRange"             baseparm             label   "Clipping Range"             export  none         }         parm {             name    "focalLength_control"             baseparm             label   "Focal Length"             export  none         }         parm {             name    "focalLength"             baseparm             label   "Focal Length"             export  none         }         parm {             name    "focalLengthConverted"             baseparm             label   "Focal Length (converted)"             invisible             export  none         }         groupsimple {             name    "aperture_folder2"             label   "Aperture"             grouptag { "group_type" "simple" }              parm {                 name    "aperture"                 baseparm                 label   "Control Aperture"                 export  none             }             parm {                 name    "horizontalAperture_control"                 baseparm                 label   "Horizontal Aperture"                 nolabel                 invisible                 export  none             }             parm {                 name    "horizontalAperture"                 baseparm                 label   "Horizontal Aperture"                 export  none             }             parm {                 name    "horizontalApertureConverted"                 baseparm                 label   "Horizontal Aperture (converted)"                 invisible                 export  none             }             parm {                 name    "verticalAperture_control"                 baseparm                 label   "Vertical Aperture"                 nolabel                 invisible                 export  none             }             parm {                 name    "verticalAperture"                 baseparm                 label   "Vertical Aperture"                 export  none             }             parm {                 name    "verticalApertureSwitch"                 baseparm                 label   "Vertical Aperture (switch)"                 invisible                 export  none             }             parm {                 name    "verticalApertureConverted"                 baseparm                 label   "Vertical Aperture (converted)"                 invisible                 export  none             }             parm {                 name    "aspectratio"                 baseparm                 label   "Aspect Ratio"                 joinnext                 export  none             }             parm {                 name    "resMenu"                 baseparm                 label   "Choose Aspect Ratio"                 export  none             }             groupcollapsible {                 name    "aperture_offset_folder2"                 label   "Offsets"                 grouptag { "group_type" "collapsible" }                  parm {                     name    "horizontalApertureOffset_control"                     baseparm                     label   "Horizontal Aperture Offset"                     export  none                 }                 parm {                     name    "horizontalApertureOffset"                     baseparm                     label   "Horizontal Aperture Offset"                     export  none                 }                 parm {                     name    "horizontalApertureOffsetConverted"                     baseparm                     label   "Horizontal Aperture Offset (converted)"                     invisible                     export  none                 }                 parm {                     name    "verticalApertureOffset_control"                     baseparm                     label   "Vertical Aperture Offset"                     export  none                 }                 parm {                     name    "verticalApertureOffset"                     baseparm                     label   "Vertical Aperture Offset"                     export  none                 }                 parm {                     name    "verticalApertureOffsetConverted"                     baseparm                     label   "Vertical Aperture Offset (converted)"                     invisible                     export  none                 }             }          }          groupsimple {             name    "viewport_folder2"             label   "Viewport Control"             grouptag { "group_type" "simple" }              parm {                 name    "xn__houdiniguidescale_control_thb"                 baseparm                 label   "houdini:guidescale"                 export  none             }             parm {                 name    "xn__houdiniguidescale_s3a"                 baseparm                 label   "Scale Guide Geometry"                 export  none             }             parm {                 name    "xn__houdiniinviewermenu_control_2kb"                 baseparm                 label   "Show in Viewport Camera Menu"                 export  none             }             parm {                 name    "xn__houdiniinviewermenu_16a"                 baseparm                 label   "Show in Viewport Camera Menu"                 export  none             }             parm {                 name    "xn__houdinibackgroundimage_control_ypb"                 baseparm                 label   "Background Image"                 export  none             }             parm {                 name    "xn__houdinibackgroundimage_xcb"                 baseparm                 label   "Background Image"                 export  none             }             parm {                 name    "xn__houdiniforegroundimage_control_ypb"                 baseparm                 label   "Foreground Image"                 export  none             }             parm {                 name    "xn__houdiniforegroundimage_xcb"                 baseparm                 label   "Foreground Image"                 export  none             }         }      }      group {         name    "folder2_2"         label   "Sampling"          parm {             name    "xn__shutteropen_control_16a"             baseparm             label   "Shutter Open"             export  none         }         parm {             name    "xn__shutteropen_0ta"             baseparm             label   "Shutter Open"             export  none         }         parm {             name    "xn__shutterclose_control_o8a"             baseparm             label   "Shutter Close"             export  none         }         parm {             name    "xn__shutterclose_nva"             baseparm             label   "Shutter Close"             export  none         }         parm {             name    "focusDistance_control"             baseparm             label   "Focus Distance"             export  none         }         parm {             name    "focusDistance"             baseparm             label   "Focus Distance"             export  none         }         parm {             name    "fStop_control"             baseparm             label   "F-Stop"             export  none         }         parm {             name    "fStop"             baseparm             label   "F-Stop"             export  none         }         parm {             name    "exposure_control"             baseparm             label   "Exposure"             export  none         }         parm {             name    "exposure"             baseparm             label   "Exposure"             export  none         }     }      group {         name    "folder2_3"         label   "Arnold"          groupcollapsible {             name    "camera"             label   "Camera"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__primvarsarnoldexposure_control_zpbg"                 label   "Exposure"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldexposure_ycbg"                 label   "Exposure"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldexposure_control_zpbg == block } { xn__primvarsarnoldexposure_control_zpbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_control_n4bg"                 label   "Radial Distortion"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_mrbg"                 label   "Radial Distortion"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldradial_distortion_control_n4bg == block } { xn__primvarsarnoldradial_distortion_control_n4bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_type_control_sdcg"                 label   "Radial Distortion Type"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_type_rzbg"                 label   "Radial Distortion Type"                 type    string                 default { "cubic" }                 disablewhen "{ xn__primvarsarnoldradial_distortion_type_control_sdcg == block } { xn__primvarsarnoldradial_distortion_type_control_sdcg == none }"                 menu {                     "cubic"         "Cubic"                     "cubic_inverse" "Cubic Inverse"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__primvarsarnoldlens_tilt_angle_control_e1bg"                 label   "Lens Tilt"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float2\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldlens_tilt_angle_dobg"                 label   "Lens Tilt"                 type    vector2                 size    2                 default { "0" "0" }                 help    "Tilt the lens plane."                 disablewhen "{ xn__primvarsarnoldlens_tilt_angle_control_e1bg == block } { xn__primvarsarnoldlens_tilt_angle_control_e1bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float2" }             }             parm {                 name    "xn__primvarsarnoldlens_shift_control_8sbg"                 label   "Lens Shift"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float2\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldlens_shift_7fbg"                 label   "Lens Shift"                 type    vector2                 size    2                 default { "0" "0" }                 help    "Shift the lens plane."                 disablewhen "{ xn__primvarsarnoldlens_shift_control_8sbg == block } { xn__primvarsarnoldlens_shift_control_8sbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float2" }             }         }          groupcollapsible {             name    "motion_blur"             label   "Motion Blur"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__primvarsarnoldshutter_type_control_iwbg"                 label   "Shutter Filter"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldshutter_type_hjbg"                 label   "Shutter Filter"                 type    string                 default { "box" }                 disablewhen "{ xn__primvarsarnoldshutter_type_control_iwbg == block } { xn__primvarsarnoldshutter_type_control_iwbg == none }"                 menu {                     "box"       "Box"                     "triangle"  "Triangle"                     "curve"     "Curve"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_control_e1bg"                 label   "Rolling Shutter"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_dobg"                 label   "Rolling Shutter"                 type    string                 default { "off" }                 disablewhen "{ xn__primvarsarnoldrolling_shutter_control_e1bg == block } { xn__primvarsarnoldrolling_shutter_control_e1bg == none }"                 menu {                     "off"       "Off"                     "top"       "Top"                     "bottom"    "Bottom"                     "left"      "Left"                     "right"     "Right"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_duration_control_1gcg"                 label   "Rolling Shutter Duration"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_duration_02bg"                 label   "Rolling Shutter Duration"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldrolling_shutter_duration_control_1gcg == block } { xn__primvarsarnoldrolling_shutter_duration_control_1gcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }         }          groupcollapsible {             name    "depth_of_field"             label   "Depth of Field"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__primvarsarnoldaperture_blades_control_e1bg"                 label   "Aperture Blades"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_blades_dobg"                 label   "Aperture Blades"                 type    integer                 default { "0" }                 disablewhen "{ xn__primvarsarnoldaperture_blades_control_e1bg == block } { xn__primvarsarnoldaperture_blades_control_e1bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__primvarsarnoldaperture_rotation_control_n4bg"                 label   "Aperture Rotation"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_rotation_mrbg"                 label   "Aperture Rotation"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldaperture_rotation_control_n4bg == block } { xn__primvarsarnoldaperture_rotation_control_n4bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldaperture_blade_curvature_control_1gcg"                 label   "Aperture Blade Curvature"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_blade_curvature_02bg"                 label   "Aperture Blade Curvature"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldaperture_blade_curvature_control_1gcg == block } { xn__primvarsarnoldaperture_blade_curvature_control_1gcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldaperture_aspect_ratio_control_5bcg"                 label   "Aperture Aspect Ratio"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_aspect_ratio_4xbg"                 label   "Aperture Aspect Ratio"                 type    float                 default { "1" }                 disablewhen "{ xn__primvarsarnoldaperture_aspect_ratio_control_5bcg == block } { xn__primvarsarnoldaperture_aspect_ratio_control_5bcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldflat_field_focus_control_02bg"                 label   "Flat Field Focus"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldflat_field_focus_zpbg"                 label   "Flat Field Focus"                 type    toggle                 default { "1" }                 disablewhen "{ xn__primvarsarnoldflat_field_focus_control_02bg == block } { xn__primvarsarnoldflat_field_focus_control_02bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }         }      }      group {         name    "folder2_4"         label   "Karma"          parm {             name    "xn__karmacamerause_lensshader_control_subg"             label   "Use Lens Shader"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacamerause_lensshader_rhbg"             label   "Use Lens Shader"             type    toggle             default { "0" }             disablewhen "{ xn__karmacamerause_lensshader_control_subg == block } { xn__karmacamerause_lensshader_control_subg == none }"             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "bool" }         }         parm {             name    "xn__karmacameralensshadervop_control_5sbg"             label   "Lens Shader VOP"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacameralensshadervop_4fbg"             label   "Lens Shader VOP"             type    oppath             default { "" }             disablewhen "{ xn__karmacameralensshadervop_control_5sbg == block } { xn__karmacameralensshadervop_control_5sbg == none }"             parmtag { "opfilter" "!!CUSTOM/MATERIAL!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "string" }         }         parm {             name    "xn__karmacameralensshader_89ag"             label   "Lens Shader"             type    string             invisible             default { [ "hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')).shaderString() if hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')) != None else \'\'" python ] }             disablewhen "{ xn__karmacameralensshader_control_9nbg == block } { xn__karmacameralensshader_control_9nbg == none }"             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "string" }         }         parm {             name    "xn__karmacamerawindow_control_rhbg"             label   "Screen Window"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float4\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacamerawindow_q3ag"             label   "Screen Window"             type    float             size    4             default { "-1" "1" "-1" "1" }             disablewhen "{ xn__karmacamerawindow_control_rhbg == block } { xn__karmacamerawindow_control_rhbg == none }"             range   { 0 10 }             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "float4" }         }         parm {             name    "xn__karmacameratint_control_iebg"             label   "Tint"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float3\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacameratint_h0ag"             label   "Tint"             type    color             size    3             default { "1" "1" "1" }             disablewhen "{ xn__karmacameratint_control_iebg == block } { xn__karmacameratint_control_iebg == none }"             range   { 0 10 }             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "float3" }         }     }  ' $_stage_Lookdev_setup1_cam_lookdev
chblockbegin
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev sample_f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropstart $_stage_Lookdev_setup1_cam_lookdev/sample_f1
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev sample_f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F @ropend $_stage_Lookdev_setup1_cam_lookdev/sample_f2
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev sample_f3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropinc $_stage_Lookdev_setup1_cam_lookdev/sample_f3
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev lookatprimposx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractTranslates()[0]' -l p $_stage_Lookdev_setup1_cam_lookdev/lookatprimposx
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev lookatprimposy
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractTranslates()[1]' -l p $_stage_Lookdev_setup1_cam_lookdev/lookatprimposy
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev lookatprimposz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractTranslates()[2]' -l p $_stage_Lookdev_setup1_cam_lookdev/lookatprimposz
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev lookatprimrotx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractRotates()[0]' -l p $_stage_Lookdev_setup1_cam_lookdev/lookatprimrotx
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev lookatprimroty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractRotates()[1]' -l p $_stage_Lookdev_setup1_cam_lookdev/lookatprimroty
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev lookatprimrotz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractRotates()[2]' -l p $_stage_Lookdev_setup1_cam_lookdev/lookatprimrotz
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev focalLengthConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'focalLength\')' -l p $_stage_Lookdev_setup1_cam_lookdev/focalLengthConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev horizontalAperture_control
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ifs(!strcmp(chs("aperture"), "setratio"), "set", chs("aperture"))' $_stage_Lookdev_setup1_cam_lookdev/horizontalAperture_control
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev horizontalApertureConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'horizontalAperture\')' -l p $_stage_Lookdev_setup1_cam_lookdev/horizontalApertureConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev verticalAperture_control
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ifs(!strcmp(chs("aperture"), "setratio"), "set", chs("aperture"))' $_stage_Lookdev_setup1_cam_lookdev/verticalAperture_control
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev verticalApertureSwitch
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(!strcmp(chs("aperture"), "setratio"), ch("horizontalAperture") * ch("aspectratioy") / ch("aspectratiox"), ch("verticalAperture"))' $_stage_Lookdev_setup1_cam_lookdev/verticalApertureSwitch
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev verticalApertureConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'verticalApertureSwitch\')' -l p $_stage_Lookdev_setup1_cam_lookdev/verticalApertureConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev horizontalApertureOffsetConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'horizontalApertureOffset\')' -l p $_stage_Lookdev_setup1_cam_lookdev/horizontalApertureOffsetConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev verticalApertureOffsetConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'verticalApertureOffset\')' -l p $_stage_Lookdev_setup1_cam_lookdev/verticalApertureOffsetConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev xn__houdiniguidescale_s3a
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1 / __import__(\'loputils\').getMetersPerUnit(pwd())' -l p $_stage_Lookdev_setup1_cam_lookdev/xn__houdiniguidescale_s3a
chadd -t 0 0 $_stage_Lookdev_setup1_cam_lookdev xn__karmacameralensshader_89ag
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')).shaderString() if hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')) != None else \'\'' -l p $_stage_Lookdev_setup1_cam_lookdev/xn__karmacameralensshader_89ag
chblockend
opparm -V 2.0 $_stage_Lookdev_setup1_cam_lookdev sample_f ( sample_f1 sample_f2 sample_f3 ) t ( -0.5402223475194654 0.181010995169772 8.433112742719713 ) r ( 3.891892430263436 -0.32432430133332024 -7.354548991914253e-8 ) aperture ( setratio ) camera ( 1 ) motion_blur ( 1 ) depth_of_field ( 1 )
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_stage_Lookdev_setup1_cam_lookdev
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -D off $_stage_Lookdev_setup1_cam_lookdev
opexprlanguage -s hscript $_stage_Lookdev_setup1_cam_lookdev
opuserdata -n '___Version___' -v '2.0' $_stage_Lookdev_setup1_cam_lookdev

# Node $_stage_Lookdev_setup1_karmarendersettings (Lop/karmarenderproperties)
set _stage_Lookdev_setup1_karmarendersettings = `run("opadd -e -n -v karmarenderproperties karmarendersettings")`
oplocate -x `$arg2 + 10.4375` -y `$arg3 + 3.2747199999999999` $_stage_Lookdev_setup1_karmarendersettings
opparm $_stage_Lookdev_setup1_karmarendersettings  extrarendervars ( 0 ) tonemapcurve ( 31 ) ocio ( 0 ) colorlimits ( 0 )
chblockbegin
chadd -t 0 0 $_stage_Lookdev_setup1_karmarendersettings oracle_minsamples
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(1, sqrt(if(strmatch(chs("convergence_mode"), "Variance"), ch("samplesperpixel"), ch("pathtracedsamples"))))' $_stage_Lookdev_setup1_karmarendersettings/oracle_minsamples
chblockend
opparm $_stage_Lookdev_setup1_karmarendersettings picture ( "" ) camera ( "" ) res_mode ( manual ) resolution ( 1920 1080 ) samplesperpixel ( 32 ) folder2_1_1 ( 1 1 1 1 1 ) __indirectsampling ( 1 ) folder15 ( 1 ) enabledof ( off ) enablemblur ( off ) folder16 ( 1 ) autoheadlight ( on ) __lpe ( 1 ) folder0 ( 1 ) combineddiffuse ( on ) combinedglossyreflection ( on ) sss ( on ) albedo ( on ) __ray ( 1 ) hituv ( on ) __variance ( 1 ) oracle_ociodisplay ( ACES ) oracle_ocioview ( sRGB ) folder14 ( 1 ) guiding_samples ( 64 ) tonemapcurve2pos ( 0.03333333507180214 ) tonemapcurve2value ( 0.0476190522313118 ) tonemapcurve3pos ( 0.06666667014360428 ) tonemapcurve3value ( 0.09090909361839294 ) tonemapcurve4pos ( 0.10000000149011612 ) tonemapcurve4value ( 0.1304347962141037 ) tonemapcurve5pos ( 0.13333334028720856 ) tonemapcurve5value ( 0.1666666567325592 ) tonemapcurve6pos ( 0.1666666716337204 ) tonemapcurve6value ( 0.20000000298023224 ) tonemapcurve7pos ( 0.20000000298023224 ) tonemapcurve7value ( 0.23076924681663513 ) tonemapcurve8pos ( 0.23333333432674408 ) tonemapcurve8value ( 0.25925925374031067 ) tonemapcurve9pos ( 0.2666666805744171 ) tonemapcurve9value ( 0.2857142984867096 ) tonemapcurve10pos ( 0.29999998211860657 ) tonemapcurve10value ( 0.3103448152542114 ) tonemapcurve11pos ( 0.3333333432674408 ) tonemapcurve11value ( 0.3333333432674408 ) tonemapcurve12pos ( 0.36666667461395264 ) tonemapcurve12value ( 0.3548387289047241 ) tonemapcurve13pos ( 0.4000000059604645 ) tonemapcurve13value ( 0.375 ) tonemapcurve14pos ( 0.43333330750465393 ) tonemapcurve14value ( 0.39393937587738037 ) tonemapcurve15pos ( 0.46666666865348816 ) tonemapcurve15value ( 0.4117646813392639 ) tonemapcurve16pos ( 0.5 ) tonemapcurve16value ( 0.4285714328289032 ) tonemapcurve17pos ( 0.5333333611488342 ) tonemapcurve17value ( 0.444444477558136 ) tonemapcurve18pos ( 0.5666666626930237 ) tonemapcurve18value ( 0.45945945382118225 ) tonemapcurve19pos ( 0.5999999642372131 ) tonemapcurve19value ( 0.4736841917037964 ) tonemapcurve20pos ( 0.6333333253860474 ) tonemapcurve20value ( 0.4871794581413269 ) tonemapcurve21pos ( 0.6666666865348816 ) tonemapcurve21value ( 0.5 ) tonemapcurve22pos ( 0.699999988079071 ) tonemapcurve22value ( 0.5121951103210449 ) tonemapcurve23pos ( 0.7333333492279053 ) tonemapcurve23value ( 0.523809552192688 ) tonemapcurve24pos ( 0.7666666507720947 ) tonemapcurve24value ( 0.5348836779594421 ) tonemapcurve25pos ( 0.800000011920929 ) tonemapcurve25value ( 0.5454545617103577 ) tonemapcurve26pos ( 0.8333333134651184 ) tonemapcurve26value ( 0.5555555820465088 ) tonemapcurve27pos ( 0.8666666150093079 ) tonemapcurve27value ( 0.5652173757553101 ) tonemapcurve28pos ( 0.9000000357627869 ) tonemapcurve28value ( 0.5744681358337402 ) tonemapcurve29pos ( 0.9333333373069763 ) tonemapcurve29value ( 0.5833333134651184 ) tonemapcurve30pos ( 0.9666666984558105 ) tonemapcurve30value ( 0.5918367505073547 ) tonemapcurve31pos ( 1 ) tonemapcurve31value ( 0.6000000238418579 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -D off $_stage_Lookdev_setup1_karmarendersettings
opexprlanguage -s hscript $_stage_Lookdev_setup1_karmarendersettings
opuserdata -n '___Version___' -v '' $_stage_Lookdev_setup1_karmarendersettings

# Node $_stage_Lookdev_setup1_rendersettings2 (Lop/rendersettings)
set _stage_Lookdev_setup1_rendersettings2 = `run("opadd -e -n -v rendersettings rendersettings2")`
oplocate -x `$arg2 + 10.4375` -y `$arg3 + 2.2747199999999999` $_stage_Lookdev_setup1_rendersettings2
opspareds '    groupcollapsible {         name    "sample_group3"         label   "Frame Range/Subframes"         grouptag { "group_type" "collapsible" }         parmtag { "sidefx::header_parm" "sample_behavior" }          parm {             name    "sample_behavior"             baseparm             label   "Sampling Behavior"             export  none         }         parm {             name    "sample_f"             baseparm             label   "Start/End/Inc"             export  none         }         parm {             name    "sample_subframeenable"             baseparm             label   "Subframe Sampling"             export  none         }         groupsimple {             name    "sample_subframegroup3"             label   "Subframe Sampling"             disablewhen "{ sample_subframeenable == 0 }"             grouptag { "group_type" "simple" }             parmtag { "sidefx::header_toggle" "sample_subframeenable" }              parm {                 name    "sample_shuttermode"                 baseparm                 label   "Shutter"                 export  none             }             parm {                 name    "sample_shutterrange"                 baseparm                 label   "Shutter Open/Close"                 export  none             }             parm {                 name    "sample_cameraprim"                 baseparm                 label   "Camera Prim"                 export  none             }             parm {                 name    "sample_count"                 baseparm                 label   "Samples"                 export  none             }             parm {                 name    "sample_includeframe"                 baseparm                 label   "Always Include Frame Sample"                 export  none             }         }      }      parm {         name    "primpattern"         baseparm         label   "Primitives"         export  none     }     parm {         name    "primpath"         baseparm         label   "Primitive Path"         export  none     }     parm {         name    "createprims"         baseparm         label   "Action"         export  none     }     parm {         name    "initforedit"         baseparm         label   "Initialize Parameters"         export  none     }     groupcollapsible {         name    "createprimsgroup3"         label   "Create Primitives"         hidewhen "{ createprims != on }"         grouptag { "group_type" "collapsible" }          parm {             name    "primcount"             baseparm             label   "Primitive Count"             export  none         }         parm {             name    "primtype"             baseparm             label   "Primitive Type"             invisible             export  none         }         parm {             name    "primkind"             baseparm             label   "Primitive Kind"             export  none         }         parm {             name    "specifier"             baseparm             label   "Primitive Specifier"             export  none         }         parm {             name    "classancestor"             baseparm             label   "Class Ancestor"             export  none         }         parm {             name    "parentprimtype"             baseparm             label   "Parent Primitive Type"             export  none         }     }      group {         name    "settings2"         label   "Standard"          parm {             name    "products_control"             baseparm             label   "products"             export  none         }         parm {             name    "products"             baseparm             label   "Ordered Products"             export  none         }         parm {             name    "includedPurposes_control"             baseparm             label   "includedPurposes"             export  none         }         parm {             name    "includedPurposes"             baseparm             label   "Included Purposes"             export  none         }         parm {             name    "materialBindingPurposes_control"             baseparm             label   "materialBindingPurposes"             export  none         }         parm {             name    "materialBindingPurposes"             baseparm             label   "Material Binding Purposes"             export  none         }         parm {             name    "sepparm"             baseparm             label   "Separator"             export  none         }         parm {             name    "camera_control"             baseparm             label   "camera"             export  none         }         parm {             name    "camera"             baseparm             label   "Camera"             export  none         }         parm {             name    "res_mode"             baseparm             label   "Resolution Mode"             export  none         }         parm {             name    "resolution_control"             baseparm             label   "resolution"             export  none         }         parm {             name    "resolution"             baseparm             label   "Resolution"             joinnext             export  none         }         parm {             name    "resolutionMenu"             baseparm             label   "Choose Resolution"             nolabel             export  none         }         parm {             name    "instantaneousShutter_control"             baseparm             label   "instantaneousShutter"             export  none         }         parm {             name    "instantaneousShutter"             baseparm             label   "Instantaneous Shutter"             export  none         }         parm {             name    "aspectRatioConformPolicy_control"             baseparm             label   "aspectRatioConformPolicy"             export  none         }         parm {             name    "aspectRatioConformPolicy"             baseparm             label   "Aspect Ratio Conform Policy"             export  none         }         parm {             name    "dataWindowNDC_control"             baseparm             label   "dataWindowNDC"             export  none         }         parm {             name    "dataWindowNDC"             baseparm             label   "Data Window NDC"             export  none         }         parm {             name    "pixelAspectRatio_control"             baseparm             label   "pixelAspectRatio"             export  none         }         parm {             name    "pixelAspectRatio"             baseparm             label   "Pixel Aspect Ratio"             export  none         }     }      group {         name    "settings2_1"         label   "Arnold"          groupcollapsible {             name    "sampling"             label   "Sampling"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobalenable_progressive_render_control_dfcg"                 label   "Enable Progressive Render"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalenable_progressive_render_c1bg"                 label   "Enable Progressive Render"                 type    toggle                 default { "0" }                 help    "Enable progressive sampling."                 disablewhen "{ xn__arnoldglobalenable_progressive_render_control_dfcg == block } { xn__arnoldglobalenable_progressive_render_control_dfcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalAA_samples_control_xpbg"                 label   "Camera (AA)"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalAA_samples_wcbg"                 label   "Camera (AA)"                 type    integer                 default { "1" }                 help    "Controls the amount of rays per pixel that will be traced from the camera. The higher the number of samples, the better the anti-aliasing quality, and the longer the render times. The exact number of rays per pixel is the square of this value. For example, an AA Samples value of 3 means 3x3 = 9 pixel samples."                 disablewhen "{ xn__arnoldglobalAA_samples_control_xpbg == block } { xn__arnoldglobalAA_samples_control_xpbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalenable_adaptive_sampling_control_qdcg"                 label   "Enable Adaptive Sampling"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalenable_adaptive_sampling_pzbg"                 label   "Enable Adaptive Sampling"                 type    toggle                 default { "0" }                 disablewhen "{ xn__arnoldglobalenable_adaptive_sampling_control_qdcg == block } { xn__arnoldglobalenable_adaptive_sampling_control_qdcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalAA_samples_max_control_gwbg"                 label   "Max. Camera (AA)"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalAA_samples_max_fjbg"                 label   "Max. Camera (AA)"                 type    integer                 default { "20" }                 help    "When adaptive sampling is enabled, this control the maximum amount of rays per pixel that will be traced from the camera. The exact number of rays per pixel is the square of this value. Note that setting this parameter to a value lower or equal to AA samples will disable adaptive sampling."                 disablewhen "{ xn__arnoldglobalAA_samples_max_control_gwbg == block } { xn__arnoldglobalAA_samples_max_control_gwbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalAA_adaptive_threshold_control_u7bg"                 label   "Adaptive Threshold"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalAA_adaptive_threshold_tubg"                 label   "Adaptive Threshold"                 type    float                 default { "0.015" }                 help    "The variance-based threshold. Adapative sampling will stop if the variance is below this level."                 disablewhen "{ xn__arnoldglobalAA_adaptive_threshold_control_u7bg == block } { xn__arnoldglobalAA_adaptive_threshold_control_u7bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__arnoldglobalGI_diffuse_samples_control_y2bg"                 label   "Diffuse"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_diffuse_samples_xpbg"                 label   "Diffuse"                 type    integer                 default { "2" }                 help    "The number of hemispherical rays fired for indirect diffuse GI shader evaluations. Increase this number to reduce the diffuse GI noise. The exact number of hemispherical rays is the square of this value. This is not supported for GPU renders."                 disablewhen "{ xn__arnoldglobalGI_diffuse_samples_control_y2bg == block } { xn__arnoldglobalGI_diffuse_samples_control_y2bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_specular_samples_control_l4bg"                 label   "Specular"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_specular_samples_krbg"                 label   "Specular"                 type    integer                 default { "2" }                 help    "The number of BRDF rays fired for indirect glossy specular shader evaluations. Increase this number to reduce the noise in soft/blurry reflections. The exact number of rays is the square of this value. This is not supported for GPU renders."                 disablewhen "{ xn__arnoldglobalGI_specular_samples_control_l4bg == block } { xn__arnoldglobalGI_specular_samples_control_l4bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_transmission_samples_control_3bcg"                 label   "Transmission"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_transmission_samples_2xbg"                 label   "Transmission"                 type    integer                 default { "2" }                 help    "The number of samples used to simulate the microfacet-based glossy transmission evaluations. This is not supported for GPU renders."                 disablewhen "{ xn__arnoldglobalGI_transmission_samples_control_3bcg == block } { xn__arnoldglobalGI_transmission_samples_control_3bcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_sss_samples_control_gwbg"                 label   "SSS"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_sss_samples_fjbg"                 label   "SSS"                 type    integer                 default { "2" }                 help    "The number of SSS lighting samples (direct and indirect) that will be taken to estimate lighting within a radius of the point being shaded. Higher values produce a cleaner solution, but will take longer to render. This is not supported for GPU renders."                 disablewhen "{ xn__arnoldglobalGI_sss_samples_control_gwbg == block } { xn__arnoldglobalGI_sss_samples_control_gwbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_volume_samples_control_c1bg"                 label   "Volume"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_volume_samples_bobg"                 label   "Volume"                 type    integer                 default { "2" }                 help    "The number of indirect diffuse samples for volumes. Higher values reduce the noise, but will take longer to render. This is not supported for GPU renders."                 disablewhen "{ xn__arnoldglobalGI_volume_samples_control_c1bg == block } { xn__arnoldglobalGI_volume_samples_control_c1bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalindirect_specular_blur_control_h9bg"                 label   "Indirect Specular Blur"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalindirect_specular_blur_gwbg"                 label   "Indirect Specular Blur"                 type    float                 default { "1" }                 help    "Sets indirect specular blurring to reduce caustic noise. Setting to zero gives the most accurate but also noisy renders, while higher values blur caustics to reduce noise."                 disablewhen "{ xn__arnoldglobalindirect_specular_blur_control_h9bg == block } { xn__arnoldglobalindirect_specular_blur_control_h9bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__arnoldglobalAA_seed_control_1kbg"                 label   "AA Seed"                 type    string                 nolabel                 default { "set" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalAA_seed_06ag"                 label   "AA Seed"                 type    integer                 default { [ "$F" hscript-expr ] }                 help    "The noise pattern seed for AA sampling."                 disablewhen "{ xn__arnoldglobalAA_seed_control_1kbg == block } { xn__arnoldglobalAA_seed_control_1kbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalsss_use_autobump_control_pzbg"                 label   "Autobump for SSS"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalsss_use_autobump_ombg"                 label   "Autobump for SSS"                 type    toggle                 default { "0" }                 help    "Take autobump into account for SSS calculations. This will result in more details in the SSS, at the cost of a slower render."                 disablewhen "{ xn__arnoldglobalsss_use_autobump_control_pzbg == block } { xn__arnoldglobalsss_use_autobump_control_pzbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobaldielectric_priorities_control_u7bg"                 label   "Nested Dielectrics"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaldielectric_priorities_tubg"                 label   "Nested Dielectrics"                 type    toggle                 default { "1" }                 help    "Enable the priority system for nested dielectrics. Disable this checkbox for legacy dielectric calculations."                 disablewhen "{ xn__arnoldglobaldielectric_priorities_control_u7bg == block } { xn__arnoldglobaldielectric_priorities_control_u7bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalAA_sample_clamp_affects_aovs_control_8jcg"                 label   "AA Sample Clamp Affects AOVs"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalAA_sample_clamp_affects_aovs_75bg"                 label   "AA Sample Clamp Affects AOVs"                 type    toggle                 default { "0" }                 disablewhen "{ xn__arnoldglobalAA_sample_clamp_affects_aovs_control_8jcg == block } { xn__arnoldglobalAA_sample_clamp_affects_aovs_control_8jcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalAA_sample_clamp_control_2xbg"                 label   "AA Sample Clamp"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalAA_sample_clamp_1kbg"                 label   "AA Sample Clamp"                 type    float                 default { "1e+30" }                 disablewhen "{ xn__arnoldglobalAA_sample_clamp_control_2xbg == block } { xn__arnoldglobalAA_sample_clamp_control_2xbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__arnoldglobalindirect_sample_clamp_control_u7bg"                 label   "Indirect Sample Clamp"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalindirect_sample_clamp_tubg"                 label   "Indirect Sample Clamp"                 type    float                 default { "10" }                 disablewhen "{ xn__arnoldglobalindirect_sample_clamp_control_u7bg == block } { xn__arnoldglobalindirect_sample_clamp_control_u7bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }         }          groupcollapsible {             name    "ray_depth"             label   "Ray Depth"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobalGI_total_depth_control_gwbg"                 label   "Total"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_total_depth_fjbg"                 label   "Total"                 type    integer                 default { "10" }                 help    "Specifies the total maximum recursion depth of any ray in the scene."                 disablewhen "{ xn__arnoldglobalGI_total_depth_control_gwbg == block } { xn__arnoldglobalGI_total_depth_control_gwbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_diffuse_depth_control_pzbg"                 label   "Diffuse"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_diffuse_depth_ombg"                 label   "Diffuse"                 type    integer                 default { "0" }                 help    "The maximum number of times a diffuse ray can bounce."                 disablewhen "{ xn__arnoldglobalGI_diffuse_depth_control_pzbg == block } { xn__arnoldglobalGI_diffuse_depth_control_pzbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_specular_depth_control_c1bg"                 label   "Specular"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_specular_depth_bobg"                 label   "Specular"                 type    integer                 default { "0" }                 help    "The maximum number of times a ray can be glossily reflected."                 disablewhen "{ xn__arnoldglobalGI_specular_depth_control_c1bg == block } { xn__arnoldglobalGI_specular_depth_control_c1bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_transmission_depth_control_u7bg"                 label   "Transmission"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_transmission_depth_tubg"                 label   "Transmission"                 type    integer                 default { "2" }                 help    "The maximum number of times a ray can be refracted."                 disablewhen "{ xn__arnoldglobalGI_transmission_depth_control_u7bg == block } { xn__arnoldglobalGI_transmission_depth_control_u7bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalGI_volume_depth_control_2xbg"                 label   "Volume"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalGI_volume_depth_1kbg"                 label   "Volume"                 type    integer                 default { "0" }                 help    "The maximum number of times a ray can bounce for multiple scattering in a volume."                 disablewhen "{ xn__arnoldglobalGI_volume_depth_control_2xbg == block } { xn__arnoldglobalGI_volume_depth_control_2xbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalauto_transparency_depth_control_3bcg"                 label   "Auto Transp. Depth"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalauto_transparency_depth_2xbg"                 label   "Auto Transp. Depth"                 type    integer                 default { "10" }                 help    "The number of allowed transparency hits. With 0 objects will be treated as opaque."                 disablewhen "{ xn__arnoldglobalauto_transparency_depth_control_3bcg == block } { xn__arnoldglobalauto_transparency_depth_control_3bcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldgloballow_light_threshold_control_l4bg"                 label   "Low Light Threshold"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldgloballow_light_threshold_krbg"                 label   "Low Light Threshold"                 type    float                 default { "0.001" }                 help    "Specify an illumination value below which Arnold will skip firing shadow rays to each light source, reducing rendering time."                 disablewhen "{ xn__arnoldgloballow_light_threshold_control_l4bg == block } { xn__arnoldgloballow_light_threshold_control_l4bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }         }          groupcollapsible {             name    "subdivision"             label   "Subdivision"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobalsubdiv_dicing_camera_control_75bg"                 label   "Subdiv Dicing Camera"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalsubdiv_dicing_camera_6sbg"                 label   "Subdiv Dicing Camera"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobalsubdiv_dicing_camera_control_75bg == block } { xn__arnoldglobalsubdiv_dicing_camera_control_75bg == none }"                 parmtag { "script_action" "import loputils\\nkwargs[\'ctrl\'] = True\\nloputils.selectPrimsInParm(kwargs, False)" }                 parmtag { "script_action_help" "Select a primitive using the primitive picker dialog" }                 parmtag { "script_action_icon" "BUTTONS_reselect" }                 parmtag { "sidefx::usdpathtype" "prim" }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalsubdiv_frustum_culling_control_h9bg"                 label   "Frustum Culling"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalsubdiv_frustum_culling_gwbg"                 label   "Frustum Culling"                 type    toggle                 default { "0" }                 help    "Subdivision patches outside the view or dicing camera frustum will not be subdivided"                 disablewhen "{ xn__arnoldglobalsubdiv_frustum_culling_control_h9bg == block } { xn__arnoldglobalsubdiv_frustum_culling_control_h9bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalsubdiv_frustum_padding_control_h9bg"                 label   "Frustum Padding"                 type    string                 nolabel                 default { "none" }                 disablewhen "{ xn__arnoldglobalsubdiv_frustum_culling_gwbg == 0 }"                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalsubdiv_frustum_padding_gwbg"                 label   "Frustum Padding"                 type    float                 default { "0" }                 help    "World space padding for the subdiv frustum culling that can be increased as needed to minimize artifacts from out-of-view objects in cast shadows, reflections, etc."                 disablewhen "{ xn__arnoldglobalsubdiv_frustum_padding_control_h9bg == block } { xn__arnoldglobalsubdiv_frustum_padding_control_h9bg == none } { xn__arnoldglobalsubdiv_frustum_culling_gwbg == 0 }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }         }          groupcollapsible {             name    "shaders"             label   "Shaders"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobalbackground_control_xpbg"                 label   "Background"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalbackground_wcbg"                 label   "Background"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobalbackground_control_xpbg == block } { xn__arnoldglobalbackground_control_xpbg == none }"                 parmtag { "script_action" "import loputils\\nkwargs[\'ctrl\'] = True\\nloputils.selectPrimsInParm(kwargs, False)" }                 parmtag { "script_action_help" "Select a primitive using the primitive picker dialog" }                 parmtag { "script_action_icon" "BUTTONS_reselect" }                 parmtag { "sidefx::usdpathtype" "prim" }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalatmosphere_control_xpbg"                 label   "Atmosphere"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalatmosphere_wcbg"                 label   "Atmosphere"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobalatmosphere_control_xpbg == block } { xn__arnoldglobalatmosphere_control_xpbg == none }"                 parmtag { "script_action" "import loputils\\nkwargs[\'ctrl\'] = True\\nloputils.selectPrimsInParm(kwargs, False)" }                 parmtag { "script_action_help" "Select a primitive using the primitive picker dialog" }                 parmtag { "script_action_icon" "BUTTONS_reselect" }                 parmtag { "sidefx::usdpathtype" "prim" }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalaov_shaders_control_krbg"                 label   "AOV Shaders"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalaov_shaders_jebg"                 label   "AOV Shaders"                 type    string                 default { "" }                 help    "AOV shader will be evaluated after the regular surface shader. With this it is possible to add shaders to set specific AOVs without modifying the original shader tree, such as the popular Cryptomatte automatic ID matte shader."                 disablewhen "{ xn__arnoldglobalaov_shaders_control_krbg == block } { xn__arnoldglobalaov_shaders_control_krbg == none }"                 parmtag { "script_action" "import loputils\\nkwargs[\'ctrl\'] = True\\nloputils.selectPrimsInParm(kwargs, False)" }                 parmtag { "script_action_help" "Select a primitive using the primitive picker dialog" }                 parmtag { "script_action_icon" "BUTTONS_reselect" }                 parmtag { "sidefx::usdpathtype" "prim" }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalimager_control_fjbg"                 label   "Imager"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalimager_e5ag"                 label   "Imager"                 type    string                 default { "" }                 help    "The imager graph to evaluate on the output driver."                 disablewhen "{ xn__arnoldglobalimager_control_fjbg == block } { xn__arnoldglobalimager_control_fjbg == none }"                 parmtag { "script_action" "import loputils\\nkwargs[\'ctrl\'] = True\\nloputils.selectPrimsInParm(kwargs, False)" }                 parmtag { "script_action_help" "Select a primitive using the primitive picker dialog" }                 parmtag { "script_action_icon" "BUTTONS_reselect" }                 parmtag { "sidefx::usdpathtype" "prim" }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }         }          groupcollapsible {             name    "texture"             label   "Texture"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobaltexture_max_memory_MB_control_u7bg"                 label   "Cache Size (MB)"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_max_memory_MB_tubg"                 label   "Cache Size (MB)"                 type    float                 default { "4096" }                 help    "Texture cache size in MB."                 disablewhen "{ xn__arnoldglobaltexture_max_memory_MB_control_u7bg == block } { xn__arnoldglobaltexture_max_memory_MB_control_u7bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__arnoldglobaltexture_max_open_files_control_h9bg"                 label   "Max. Open Textures"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_max_open_files_gwbg"                 label   "Max. Open Textures"                 type    integer                 default { "0" }                 help    "The maximum number of files that the texture system keeps open at any given time to avoid excessive closing and re-opening of files when caching individual texture tiles. A value of 0 means the number is automatically computed by Arnold. Increasing this number may result in slightly better texture caching performance. On the other hand, if this value is higher than the maximum number of concurrently open files supported by the operating system (e.g. Linux vs Windows), some texture lookups may fail and return red."                 disablewhen "{ xn__arnoldglobaltexture_max_open_files_control_h9bg == block } { xn__arnoldglobaltexture_max_open_files_control_h9bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobaltexture_automip_control_2xbg"                 label   "Auto-mipmap"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_automip_1kbg"                 label   "Auto-mipmap"                 type    toggle                 default { "1" }                 help    "If a texture map file is not natively mipmapped (e.g. a JPEG file), enabling this option will trigger the automatic generation of a mipmap that will be stored in memory for the duration of the render. This mipmap generation increases render time, specially for scenes with many high resolution textures. This is in contrast to file formats that natively support mipmapping, such as TIFF and EXR, where the mipmap is generated only once (with a preprocessing tool like maketx). Use with care."                 disablewhen "{ xn__arnoldglobaltexture_automip_control_2xbg == block } { xn__arnoldglobaltexture_automip_control_2xbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobaltexture_accept_untiled_control_h9bg"                 label   "Accept Untiled"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_accept_untiled_gwbg"                 label   "Accept Untiled"                 type    toggle                 default { "1" }                 help    "This is the size of the tiles when using auto-tiling. Bigger values mean less frequent texture loads, but use more memory. Use existing Tiled files: If .tx file with the same name of the texture is found, the renderer will use it."                 disablewhen "{ xn__arnoldglobaltexture_accept_untiled_control_h9bg == block } { xn__arnoldglobaltexture_accept_untiled_control_h9bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobaltexture_autotile_control_pzbg"                 label   "Auto-tile"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_autotile_ombg"                 label   "Auto-tile"                 type    integer                 default { "0" }                 help    "This is the size of the tiles when using auto-tiling. Bigger values mean less frequent texture loads, but use more memory. Use existing Tiled files: If .tx file with the same name of the texture is found, the renderer will use it."                 disablewhen "{ xn__arnoldglobaltexture_autotile_control_pzbg == block } { xn__arnoldglobaltexture_autotile_control_pzbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobaltexture_accept_unmipped_control_3bcg"                 label   "Accept Unmipped"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_accept_unmipped_2xbg"                 label   "Accept Unmipped"                 type    toggle                 default { "1" }                 help    "Unmipped texture maps are inefficient to render, because filtering to reduce aliasing has to be done on the fly. For that reason, you may want to use this flag to enforce that all your texture maps are already mipmapped in advance (perhaps by using a preprocessing tool like maketx). When this flag is enabled, any attempt at loading an unmipped file will produce an error and abort the renderer. By default this flag is enabled, because most of the popular image formats such as JPEG don\'t support tiling."                 disablewhen "{ xn__arnoldglobaltexture_accept_unmipped_control_3bcg == block } { xn__arnoldglobaltexture_accept_unmipped_control_3bcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobaltexture_auto_generate_tx_control_qdcg"                 label   "Auto-Generate Tx"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_auto_generate_tx_pzbg"                 label   "Auto-Generate Tx"                 type    toggle                 default { "1" }                 help    "Automatically generate or update the .tx texture corresponding to the texture files. If an up to date version already exists, the generation will be skipped. The .tx textures will be linearized according to the colorspace selected on the image shader."                 disablewhen "{ xn__arnoldglobaltexture_auto_generate_tx_control_qdcg == block } { xn__arnoldglobaltexture_auto_generate_tx_control_qdcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobaltexture_use_existing_tx_control_3bcg"                 label   "Use Existing Tx"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_use_existing_tx_2xbg"                 label   "Use Existing Tx"                 type    toggle                 default { "1" }                 help    "If an untiled texture is requested (e.g. concrete.jpg) but a .tx file with the same filename is found (e.g. concrete.tx), the renderer will load the .tx file instead."                 disablewhen "{ xn__arnoldglobaltexture_use_existing_tx_control_3bcg == block } { xn__arnoldglobaltexture_use_existing_tx_control_3bcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }         }          groupcollapsible {             name    "device"             label   "Device"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobalrender_device_control_tubg"                 label   "Render Device"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalrender_device_shbg"                 label   "Render Device"                 type    string                 default { "CPU" }                 help    "Specify the render device."                 disablewhen "{ xn__arnoldglobalrender_device_control_tubg == block } { xn__arnoldglobalrender_device_control_tubg == none }"                 menu {                     "CPU"   "Cpu"                     "GPU"   "Gpu"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalrender_device_fallback_control_h9bg"                 label   "Render Device Fallback"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalrender_device_fallback_gwbg"                 label   "Render Device Fallback"                 type    string                 default { "error" }                 help    "Specify the render fallback device when no GPU is available."                 disablewhen "{ xn__arnoldglobalrender_device_fallback_control_h9bg == block } { xn__arnoldglobalrender_device_fallback_control_h9bg == none }"                 menu {                     "error" "Error"                     "CPU"   "Cpu"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalgpu_default_names_control_c1bg"                 label   "Device Expression"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalgpu_default_names_bobg"                 label   "Device Expression"                 type    string                 default { "*" }                 help    "Select GPU names with this filter.  Note you cannot mix RTX and non-RTX graphics cards in the same render."                 disablewhen "{ xn__arnoldglobalgpu_default_names_control_c1bg == block } { xn__arnoldglobalgpu_default_names_control_c1bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalgpu_default_min_memory_MB_control_dfcg"                 label   "Min. Memory (MB)"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalgpu_default_min_memory_MB_c1bg"                 label   "Min. Memory (MB)"                 type    integer                 default { "512" }                 disablewhen "{ xn__arnoldglobalgpu_default_min_memory_MB_control_dfcg == block } { xn__arnoldglobalgpu_default_min_memory_MB_control_dfcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalgpu_max_texture_resolution_control_zgcg"                 label   "Max. Texture Res."                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalgpu_max_texture_resolution_y2bg"                 label   "Max. Texture Res."                 type    integer                 default { "0" }                 help    "This will limit the number of mipmap levels generated to be up to the specified resolution, unless the value is 0 in which case there is no maximum."                 disablewhen "{ xn__arnoldglobalgpu_max_texture_resolution_control_zgcg == block } { xn__arnoldglobalgpu_max_texture_resolution_control_zgcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalmanual_device_selection_control_3bcg"                 label   "Enable Manual Device Selection"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalmanual_device_selection_2xbg"                 label   "Enable Manual Device Selection"                 type    toggle                 default { "0" }                 help    "Specify the render fallback device when no GPU is available."                 disablewhen "{ xn__arnoldglobalmanual_device_selection_control_3bcg == block } { xn__arnoldglobalmanual_device_selection_control_3bcg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobaldevice_selection_control_pzbg"                 label   "Device Selection"                 type    string                 nolabel                 default { "none" }                 disablewhen "{ xn__arnoldglobalmanual_device_selection_2xbg == 0 }"                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaldevice_selection_ombg"                 label   "Device Selection"                 type    string                 default { "" }                 help    "GPU device selection. Note you cannot mix RTX and non-RTX graphics cards in the same render."                 disablewhen "{ xn__arnoldglobaldevice_selection_control_pzbg == block } { xn__arnoldglobaldevice_selection_control_pzbg == none } { xn__arnoldglobalmanual_device_selection_2xbg == 0 }"                 menutoggle {                     [ "__import__(\\"htoa.device\\").device.gpuDeviceMenu()" ]                     language python                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalcolor_space_linear_control_y2bg"                 label   "Rendering Color Space"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalcolor_family_linear_krbg"                 label   "Rendering Color Family"                 type    string                 joinnext                 default { [ "import htoa.ocio\\nreturn htoa.ocio.default_linear_family" python ] }                 help    "The render color family"                 disablewhen "{ xn__arnoldglobalcolor_space_linear_control_y2bg == block } { xn__arnoldglobalcolor_space_linear_control_y2bg == none }"                 menu {                     [ "__import__(\'htoa.ocio\').ocio.lopColorTransformFamilyMenu(kwargs[\'node\'], \'linear\')" ]                     language python                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }             }             parm {                 name    "xn__arnoldglobalcolor_space_linear_xpbg"                 label   "Rendering Color Space"                 type    string                 nolabel                 default { [ "import htoa.ocio\\nreturn htoa.ocio.default_linear" python ] }                 help    "The render color space"                 disablewhen "{ xn__arnoldglobalcolor_space_linear_control_y2bg == block } { xn__arnoldglobalcolor_space_linear_control_y2bg == none }"                 menu {                     [ "__import__(\'htoa.ocio\').ocio.renderColorSpaceMenu(kwargs[\'node\'].parm(hou.text.encode(\'arnold:global:color_family_linear\')).eval())" ]                     language python                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalcolor_space_narrow_control_y2bg"                 label   "Narrow Color Space"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalcolor_family_narrow_krbg"                 label   "Narrow Color Family"                 type    string                 joinnext                 default { [ "import htoa.ocio\\nreturn htoa.ocio.default_sRGB_family" python ] }                 help    "The narrow color family"                 disablewhen "{ xn__arnoldglobalcolor_space_narrow_control_y2bg == block } { xn__arnoldglobalcolor_space_narrow_control_y2bg == none }"                 menu {                     [ "__import__(\'htoa.ocio\').ocio.lopColorTransformFamilyMenu(kwargs[\'node\'], \'narrow\')" ]                     language python                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }             }             parm {                 name    "xn__arnoldglobalcolor_space_narrow_xpbg"                 label   "Narrow Color Space"                 type    string                 nolabel                 default { [ "import htoa.ocio\\nreturn htoa.ocio.default_sRGB" python ] }                 help    "The narrow color space"                 disablewhen "{ xn__arnoldglobalcolor_space_narrow_control_y2bg == block } { xn__arnoldglobalcolor_space_narrow_control_y2bg == none }"                 menu {                     [ "__import__(\'htoa.ocio\').ocio.narrowColorSpaceMenu(kwargs[\'node\'].parm(hou.text.encode(\'arnold:global:color_family_narrow\')).eval())" ]                     language python                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }         }          groupcollapsible {             name    "system"             label   "System"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldglobalthreads_control_1kbg"                 label   "Threads"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalthreads_06ag"                 label   "Threads"                 type    integer                 default { "0" }                 help    "Manually set the number of rendering threads. The value of 0 will use all processing cores and negative values mean use all but that many cores. For example, threads=-2 means use all but 2 cores, while threads=2 means only use 2 cores. This is useful when you want to leave one or two cores for other tasks. This parameter is never written in an .ass file by design, and will only affect interactive or batch renders."                 disablewhen "{ xn__arnoldglobalthreads_control_1kbg == block } { xn__arnoldglobalthreads_control_1kbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalparallel_node_init_control_y2bg"                 label   "Parallel Node Init"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalparallel_node_init_xpbg"                 label   "Parallel Node Init"                 type    toggle                 default { "1" }                 help    "Initialization and update of scene nodes can be multi-threaded. This can significantly lower the scene preparation time in complex scenes with many objects, shaders or lights."                 disablewhen "{ xn__arnoldglobalparallel_node_init_control_y2bg == block } { xn__arnoldglobalparallel_node_init_control_y2bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalabort_on_error_control_gwbg"                 label   "Abort On Error"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalabort_on_error_fjbg"                 label   "Abort On Error"                 type    toggle                 default { "1" }                 help    "Aborts rendering as soon as an error is detected. This is the recommended setting. In general, you should not ignore important error messages, or you\'ll risk crashes, rendering artifacts and undefined behaviour."                 disablewhen "{ xn__arnoldglobalabort_on_error_control_gwbg == block } { xn__arnoldglobalabort_on_error_control_gwbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalabort_on_license_fail_control_u7bg"                 label   "Abort On License Fail"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalabort_on_license_fail_tubg"                 label   "Abort On License Fail"                 type    toggle                 default { "0" }                 help    "Aborts rendering if when the render starts the license is not detected. If not set and no license is found, images will be watermarked."                 disablewhen "{ xn__arnoldglobalabort_on_license_fail_control_u7bg == block } { xn__arnoldglobalabort_on_license_fail_control_u7bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalskip_license_check_control_y2bg"                 label   "Skip License Check"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalskip_license_check_xpbg"                 label   "Skip License Check"                 type    toggle                 default { "0" }                 help    "Do not try to check out a license and thus render with watermarks."                 disablewhen "{ xn__arnoldglobalskip_license_check_control_y2bg == block } { xn__arnoldglobalskip_license_check_control_y2bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalplugin_searchpath_control_c1bg"                 label   "Plugin Path"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalplugin_searchpath_bobg"                 label   "Plugin Path"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobalplugin_searchpath_control_c1bg == block } { xn__arnoldglobalplugin_searchpath_control_c1bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalprocedural_searchpath_control_u7bg"                 label   "Procedural Path"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalprocedural_searchpath_tubg"                 label   "Procedural Path"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobalprocedural_searchpath_control_u7bg == block } { xn__arnoldglobalprocedural_searchpath_control_u7bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobaltexture_searchpath_control_y2bg"                 label   "Texture Path"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobaltexture_searchpath_xpbg"                 label   "Texture Path"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobaltexture_searchpath_control_y2bg == block } { xn__arnoldglobaltexture_searchpath_control_y2bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldglobalosl_includepath_control_2xbg"                 label   "OSL Include Path"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalosl_includepath_1kbg"                 label   "OSL Include Path"                 type    string                 default { "" }                 disablewhen "{ xn__arnoldglobalosl_includepath_control_2xbg == block } { xn__arnoldglobalosl_includepath_control_2xbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }         }          groupcollapsible {             name    "diagnostics"             label   "Diagnostics"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__arnoldgloballogfile_control_1kbgd"                 label   "Log file"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldgloballogfile_06agd"                 label   "Log file"                 type    string                 default { "" }                 help    "Specifies the output path for Arnold log files."                 disablewhen "{ xn__arnoldgloballogfile_control_1kbgd == block } { xn__arnoldgloballogfile_control_1kbgd == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__arnoldgloballogverbosity_control_6sbgd"                 label   "Log verbosity"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldgloballogverbosity_5fbgd"                 label   "Log verbosity"                 type    integer                 default { "2" }                 help    "Log Verbosity (0-5)."                 disablewhen "{ xn__arnoldgloballogverbosity_control_6sbgd == block } { xn__arnoldgloballogverbosity_control_6sbgd == none }"                 range   { 0! 5! }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__arnoldglobalignore_operators_control_pzbg"                 label   "Ignore Operators"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_operators_ombg"                 label   "Ignore Operators"                 type    toggle                 default { "0" }                 help    "Ignore operator graphs."                 disablewhen "{ xn__arnoldglobalignore_operators_control_pzbg == block } { xn__arnoldglobalignore_operators_control_pzbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_imagers_control_gwbg"                 label   "Ignore Imagers"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_imagers_fjbg"                 label   "Ignore Imagers"                 type    toggle                 default { "0" }                 help    "Ignore imager graphs."                 disablewhen "{ xn__arnoldglobalignore_imagers_control_gwbg == block } { xn__arnoldglobalignore_imagers_control_gwbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_textures_control_2xbg"                 label   "Ignore Textures"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_textures_1kbg"                 label   "Ignore Textures"                 type    toggle                 default { "0" }                 help    "Ignore all textures when rendering."                 disablewhen "{ xn__arnoldglobalignore_textures_control_2xbg == block } { xn__arnoldglobalignore_textures_control_2xbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_shaders_control_gwbg"                 label   "Ignore Shaders"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_shaders_fjbg"                 label   "Ignore Shaders"                 type    toggle                 default { "0" }                 help    "Ignore all shaders when rendering. By default Arnold will render with a simple \\"N dot eye\\" shader."                 disablewhen "{ xn__arnoldglobalignore_shaders_control_gwbg == block } { xn__arnoldglobalignore_shaders_control_gwbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_atmosphere_control_c1bg"                 label   "Ignore Atmosphere"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_atmosphere_bobg"                 label   "Ignore Atmosphere"                 type    toggle                 default { "0" }                 help    "Ignore all atmospheric shaders."                 disablewhen "{ xn__arnoldglobalignore_atmosphere_control_c1bg == block } { xn__arnoldglobalignore_atmosphere_control_c1bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_lights_control_tubg"                 label   "Ignore Lights"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_lights_shbg"                 label   "Ignore Lights"                 type    toggle                 default { "0" }                 help    "Ignore all light sources."                 disablewhen "{ xn__arnoldglobalignore_lights_control_tubg == block } { xn__arnoldglobalignore_lights_control_tubg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_shadows_control_gwbg"                 label   "Ignore Shadows"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_shadows_fjbg"                 label   "Ignore Shadows"                 type    toggle                 default { "0" }                 help    "Ignore shadows from all light sources."                 disablewhen "{ xn__arnoldglobalignore_shadows_control_gwbg == block } { xn__arnoldglobalignore_shadows_control_gwbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_subdivision_control_y2bg"                 label   "Ignore Subdivision"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_subdivision_xpbg"                 label   "Ignore Subdivision"                 type    toggle                 default { "0" }                 help    "No objects will be subdivided."                 disablewhen "{ xn__arnoldglobalignore_subdivision_control_y2bg == block } { xn__arnoldglobalignore_subdivision_control_y2bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_displacement_control_l4bg"                 label   "Ignore Displacement"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_displacement_krbg"                 label   "Ignore Displacement"                 type    toggle                 default { "0" }                 help    "Displacements will be ignored."                 disablewhen "{ xn__arnoldglobalignore_displacement_control_l4bg == block } { xn__arnoldglobalignore_displacement_control_l4bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_bump_control_krbg"                 label   "Ignore Bump"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_bump_jebg"                 label   "Ignore Bump"                 type    toggle                 default { "0" }                 help    "Bump mapping will be ignored."                 disablewhen "{ xn__arnoldglobalignore_bump_control_krbg == block } { xn__arnoldglobalignore_bump_control_krbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_smoothing_control_pzbg"                 label   "Ignore Smoothing"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_smoothing_ombg"                 label   "Ignore Smoothing"                 type    toggle                 default { "0" }                 help    "Polygon normals will not be smoothed, resulting in a faceted appearance."                 disablewhen "{ xn__arnoldglobalignore_smoothing_control_pzbg == block } { xn__arnoldglobalignore_smoothing_control_pzbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_dof_control_xpbg"                 label   "Ignore Dof"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_dof_wcbg"                 label   "Ignore Dof"                 type    toggle                 default { "0" }                 help    "Ignore depth of field effects."                 disablewhen "{ xn__arnoldglobalignore_dof_control_xpbg == block } { xn__arnoldglobalignore_dof_control_xpbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }             parm {                 name    "xn__arnoldglobalignore_sss_control_xpbg"                 label   "Ignore Sss"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__arnoldglobalignore_sss_wcbg"                 label   "Ignore Sss"                 type    toggle                 default { "0" }                 help    "Ignore Subsurface Scattering calculations."                 disablewhen "{ xn__arnoldglobalignore_sss_control_xpbg == block } { xn__arnoldglobalignore_sss_control_xpbg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }         }      }      group {         name    "settings2_2"         label   "Karma"          group {             name    "global"             label   "Global"              groupcollapsible {                 name    "Rendering"                 label   "Rendering"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobalengine_control_rhbg"                     label   "Rendering Engine"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalengine_q3ag"                     label   "Rendering Engine"                     type    string                     default { "cpu" }                     disablewhen "{ xn__karmaglobalengine_control_rhbg == block } { xn__karmaglobalengine_control_rhbg == none }"                     menu {                         "cpu"   "CPU Engine"                         "xpu"   "XPU Engine (Beta)"                     }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalimagemode_control_nmbg"                     label   "Image Mode"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalimagemode_m8ag"                     label   "Image Mode"                     type    string                     default { "Progressive" }                     disablewhen "{ xn__karmaglobalimagemode_control_nmbg == block } { xn__karmaglobalimagemode_control_nmbg == none }"                     menu {                         "Progressive"   "Progressive"                         "Bucket"        "Bucket"                     }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaglobalprogressivepasses_control_ozbg"                     label   "Progressive Passes"                     type    string                     default { "none" }                     hidewhen "{ xn__karmaglobalimagemode_m8ag != Bucket }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalprogressivepasses_nmbg"                     label   "Progressive Passes"                     type    integer                     default { "0" }                     disablewhen "{ xn__karmaglobalprogressivepasses_control_ozbg == block } { xn__karmaglobalprogressivepasses_control_ozbg == none }"                     hidewhen "{ xn__karmaglobalimagemode_m8ag != Bucket }"                     range   { 0 10 }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalbucketsize_control_9nbg"                     label   "Bucket Size"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalbucketsize_89ag"                     label   "Bucket Size"                     type    integer                     default { "32" }                     disablewhen "{ xn__karmaglobalbucketsize_control_9nbg == block } { xn__karmaglobalbucketsize_control_9nbg == none }"                     range   { 4! 128 }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalbucketorder_control_wpbg"                     label   "Bucket Order"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalbucketorder_vcbg"                     label   "Bucket Order"                     type    string                     default { "Middle" }                     disablewhen "{ xn__karmaglobalbucketorder_control_wpbg == block } { xn__karmaglobalbucketorder_control_wpbg == none }"                     menu {                         "Middle"    "Middle"                         "Top"       "Top"                         "Bottom"    "Bottom"                         "Left"      "Left"                         "Right"     "Right"                     }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }             }              groupcollapsible {                 name    "Sampling"                 label   "Sampling"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobalsamplesperpixel_control_fwbg"                     label   "Pixel Samples"                     type    string                     default { "none" }                     hidewhen "{ xn__karmaglobalengine_q3ag == xpu } { xn__karmaglobalconvergence_mode_0kbg == \\"Path Traced\\" }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalsamplesperpixel_ejbg"                     label   "Pixel Samples"                     type    integer                     default { "9" }                     disablewhen "{ xn__karmaglobalsamplesperpixel_control_fwbg == block } { xn__karmaglobalsamplesperpixel_control_fwbg == none }"                     hidewhen "{ xn__karmaglobalengine_q3ag == xpu } { xn__karmaglobalconvergence_mode_0kbg == \\"Path Traced\\" }"                     range   { 1! 256 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalpathtracedsamples_control_ozbg"                     label   "Path Traced Samples"                     type    string                     default { "none" }                     hidewhen "{ xn__karmaglobalengine_q3ag == cpu xn__karmaglobalconvergence_mode_0kbg != \\"Path Traced\\" }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalpathtracedsamples_nmbg"                     label   "Path Traced Samples"                     type    integer                     default { "128" }                     disablewhen "{ xn__karmaglobalpathtracedsamples_control_ozbg == block } { xn__karmaglobalpathtracedsamples_control_ozbg == none }"                     hidewhen "{ xn__karmaglobalengine_q3ag == cpu xn__karmaglobalconvergence_mode_0kbg != \\"Path Traced\\" }"                     range   { 1! 256 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalscreendoorlimit_control_fwbg"                     label   "Screendoor Limit"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalscreendoorlimit_ejbg"                     label   "Screendoor Limit"                     type    integer                     default { "4" }                     disablewhen "{ xn__karmaglobalscreendoorlimit_control_fwbg == block } { xn__karmaglobalscreendoorlimit_control_fwbg == none }"                     range   { 0! 16 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalconvergence_mode_control_1xbg"                     label   "Convergence Mode"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalconvergence_mode_0kbg"                     label   "Convergence Mode"                     type    string                     default { "Variance" }                     disablewhen "{ xn__karmaglobalconvergence_mode_control_1xbg == block } { xn__karmaglobalconvergence_mode_control_1xbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menu {                         "Path Traced"   "Path Traced"                         "Variance"      "Automatic"                     }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaglobalrussianroulette_cutoff_control_t7bg"                     label   "Russian Roulette Cutoff Depth"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalrussianroulette_cutoff_subg"                     label   "Russian Roulette Cutoff Depth"                     type    integer                     default { "2" }                     disablewhen "{ xn__karmaglobalrussianroulette_cutoff_control_t7bg == block } { xn__karmaglobalrussianroulette_cutoff_control_t7bg == none }"                     range   { 0! 4 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmagloballight_sampling_mode_control_x2bg"                     label   "Light Sampling Mode"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmagloballight_sampling_mode_wpbg"                     label   "Light Sampling Mode"                     type    string                     default { "Light Tree" }                     disablewhen "{ xn__karmagloballight_sampling_mode_control_x2bg == block } { xn__karmagloballight_sampling_mode_control_x2bg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menu {                         "Uniform"       "Uniform"                         "Light Tree"    "Light Tree"                     }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmagloballight_sampling_quality_control_t7bg"                     label   "Light Sampling Quality"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmagloballight_sampling_quality_subg"                     label   "Light Sampling Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmagloballight_sampling_quality_control_t7bg == block } { xn__karmagloballight_sampling_quality_control_t7bg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     range   { 0! 4 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalimage_blur_control_9nbg"                     label   "Image Blur"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalimage_blur_89ag"                     label   "Image Blur"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaglobalimage_blur_control_9nbg == block } { xn__karmaglobalimage_blur_control_9nbg == none }"                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }             }              groupcollapsible {                 name    "xn__IndirectGuiding_ooa"                 label   "Indirect Guiding"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobalguiding_enable_control_subg"                     label   "Enable Indirect Guiding"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalguiding_enable_rhbg"                     label   "Enable Indirect Guiding"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaglobalguiding_enable_control_subg == block } { xn__karmaglobalguiding_enable_control_subg == none }"                     parmtag { "spare_category" "Indirect Guiding" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalguiding_samples_control_fwbg"                     label   "Indirect Training Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalguiding_samples_ejbg"                     label   "Indirect Training Samples"                     type    integer                     default { "64" }                     disablewhen "{ xn__karmaglobalguiding_samples_control_fwbg == block } { xn__karmaglobalguiding_samples_control_fwbg == none }"                     range   { 64 256 }                     parmtag { "spare_category" "Indirect Guiding" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalguiding_spatialfilter_control_65bg"                     label   "Indirect Guiding Spatial Filter"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalguiding_spatialfilter_5sbg"                     label   "Indirect Guiding Spatial Filter"                     type    float                     default { "0.5" }                     disablewhen "{ xn__karmaglobalguiding_spatialfilter_control_65bg == block } { xn__karmaglobalguiding_spatialfilter_control_65bg == none }"                     range   { 0! 1! }                     parmtag { "spare_category" "Indirect Guiding" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalguiding_directionalfilter_control_pdcg"                     label   "Indirect Guiding Directional Filter"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalguiding_directionalfilter_ozbg"                     label   "Indirect Guiding Directional Filter"                     type    float                     default { "0.1" }                     disablewhen "{ xn__karmaglobalguiding_directionalfilter_control_pdcg == block } { xn__karmaglobalguiding_directionalfilter_control_pdcg == none }"                     range   { 0! 1! }                     parmtag { "spare_category" "Indirect Guiding" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }             }              groupcollapsible {                 name    "Shading"                 label   "Shading"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobalraybias_control_ejbg"                     label   "Ray Bias"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalraybias_d5ag"                     label   "Ray Bias"                     type    float                     default { "0.001" }                     disablewhen "{ xn__karmaglobalraybias_control_ejbg == block } { xn__karmaglobalraybias_control_ejbg == none }"                     range   { 0! 1 }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalconstrainmaxrough_control_ozbg"                     label   "Constrain by Maximum Roughness"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalconstrainmaxrough_nmbg"                     label   "Constrain by Maximum Roughness"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaglobalconstrainmaxrough_control_ozbg == block } { xn__karmaglobalconstrainmaxrough_control_ozbg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalshadingqualitymult_control_b1bg"                     label   "Shading Quality Multiplier"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalshadingqualitymult_9nbg"                     label   "Shading Quality Multiplier"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaglobalshadingqualitymult_control_b1bg == block } { xn__karmaglobalshadingqualitymult_control_b1bg == none }"                     range   { 0.001! 4! }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalcolorlimit_control_9nbg"                     label   "Color Limit"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalcolorlimit_89ag"                     label   "Color Limit"                     type    float                     default { "10" }                     disablewhen "{ xn__karmaglobalcolorlimit_control_9nbg == block } { xn__karmaglobalcolorlimit_control_9nbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     range   { 1 10 }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalcolorlimitindlinked_control_x2bg"                     label   "Shared Color Limit"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalcolorlimitindlinked_wpbg"                     label   "Shared Color Limit"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaglobalcolorlimitindlinked_control_x2bg == block } { xn__karmaglobalcolorlimitindlinked_control_x2bg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalcolorlimitindirect_control_b1bg"                     label   "Indirect Color Limit"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalcolorlimitindirect_9nbg"                     label   "Indirect Color Limit"                     type    float                     default { "10" }                     disablewhen "{ xn__karmaglobalcolorlimitindirect_control_b1bg == block } { xn__karmaglobalcolorlimitindirect_control_b1bg == none }"                     range   { 1 10 }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalenable_dof_control_9nbg"                     label   "Enable Depth of Field"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalenable_dof_89ag"                     label   "Enable Depth of Field"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaglobalenable_dof_control_9nbg == block } { xn__karmaglobalenable_dof_control_9nbg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalautoheadlight_control_5sbg"                     label   "Automatic Headlight Creation"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalautoheadlight_4fbg"                     label   "Automatic Headlight Creation"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaglobalautoheadlight_control_5sbg == block } { xn__karmaglobalautoheadlight_control_5sbg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }             }              groupcollapsible {                 name    "xn__AmbientOcclusion_jpa"                 label   "Ambient Occlusion"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobaloverride_lighting_control_ozbg"                     label   "Override Lighting"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaloverride_lighting_nmbg"                     label   "Override Lighting"                     type    string                     default { "Off" }                     disablewhen "{ xn__karmaglobaloverride_lighting_control_ozbg == block } { xn__karmaglobaloverride_lighting_control_ozbg == none }"                     menu {                         "Off"               "Off"                         "Emissive Objects"  "Emissive Objects"                         "Headlight"         "Headlight"                         "Dome Light"        "Dome Light"                     }                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaglobaldisable_lighting_control_1xbg"                     label   "Disable Lighting"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaldisable_lighting_0kbg"                     label   "Disable Lighting"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaglobaldisable_lighting_control_1xbg == block } { xn__karmaglobaldisable_lighting_control_1xbg == none }"                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalhead_ao_samples_control_fwbg"                     label   "Headlight AO Samples"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalhead_ao_samples_ejbg"                     label   "Headlight AO Samples"                     type    integer                     default { "1" }                     disablewhen "{ xn__karmaglobalhead_ao_samples_control_fwbg == block } { xn__karmaglobalhead_ao_samples_control_fwbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     range   { 0! 4 }                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalhead_ao_distance_control_1xbg"                     label   "Headlight AO Distance"                     type    string                     default { "none" }                     disablewhen "{ xn__karmaglobalhead_ao_samples_ejbg == 0 }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalhead_ao_distance_0kbg"                     label   "Headlight AO Distance"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaglobalhead_ao_distance_control_1xbg == block } { xn__karmaglobalhead_ao_distance_control_1xbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     range   { 0! 10 }                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalhead_depthcue_color_control_x2bg"                     label   "Headlight Fog Color"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float3\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalhead_depthcue_color_wpbg"                     label   "Headlight Fog Color"                     type    color                     size    3                     default { "0" "0" "0" }                     disablewhen "{ xn__karmaglobalhead_depthcue_color_control_x2bg == block } { xn__karmaglobalhead_depthcue_color_control_x2bg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     range   { 0! 1! }                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float3" }                 }                 parm {                     name    "xn__karmaglobalhead_depthcue_alpha_control_x2bg"                     label   "Headlight Fog Alpha"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalhead_depthcue_alpha_wpbg"                     label   "Headlight Fog Alpha"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaglobalhead_depthcue_alpha_control_x2bg == block } { xn__karmaglobalhead_depthcue_alpha_control_x2bg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     range   { 0! 1! }                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalhead_depthcue_z_control_fwbg"                     label   "Headlight Fog Distance"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float2\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalhead_depthcue_z_ejbg"                     label   "Headlight Fog Distance"                     type    float                     size    2                     default { "0" "0" }                     disablewhen "{ xn__karmaglobalhead_depthcue_z_control_fwbg == block } { xn__karmaglobalhead_depthcue_z_control_fwbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 0 }"                     range   { 0! 1000 }                     parmtag { "spare_category" "Ambient Occlusion" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float2" }                 }             }              groupcollapsible {                 name    "Dicing"                 label   "Dicing"                 parmtag { "group_default" "0" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobaldicingcamera_control_jrbg"                     label   "Dicing Camera"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaldicingcamera_iebg"                     label   "Dicing Camera"                     type    string                     default { "" }                     disablewhen "{ xn__karmaglobaldicingcamera_control_jrbg == block } { xn__karmaglobaldicingcamera_control_jrbg == none }"                     parmtag { "spare_category" "Dicing" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobaloffscreenquality_control_1xbg"                     label   "Offscreen Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaloffscreenquality_0kbg"                     label   "Offscreen Quality"                     type    float                     default { "0.1" }                     disablewhen "{ xn__karmaglobaloffscreenquality_control_1xbg == block } { xn__karmaglobaloffscreenquality_control_1xbg == none }"                     range   { 0! 1! }                     parmtag { "spare_category" "Dicing" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobaldicingqualityscale_control_b1bg"                     label   "Dicing Quality Scale"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaldicingqualityscale_9nbg"                     label   "Dicing Quality Scale"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaglobaldicingqualityscale_control_b1bg == block } { xn__karmaglobaldicingqualityscale_control_b1bg == none }"                     range   { 0! 10 }                     parmtag { "spare_category" "Dicing" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalipr_continuous_dicing_control_65bg"                     label   "IPR Continuous Dicing"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalipr_continuous_dicing_5sbg"                     label   "IPR Continuous Dicing"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaglobalipr_continuous_dicing_control_65bg == block } { xn__karmaglobalipr_continuous_dicing_control_65bg == none }"                     parmtag { "spare_category" "Dicing" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }             }              groupcollapsible {                 name    "Image"                 label   "Image"                 parmtag { "group_default" "0" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobalimagefilter_control_wpbg"                     label   "Image Filters"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalimagefilter_vcbg"                     label   "Image Filters"                     type    string                     default { "" }                     disablewhen "{ xn__karmaglobalimagefilter_control_wpbg == block } { xn__karmaglobalimagefilter_control_wpbg == none }"                     menureplace {                         "[\\"denoise\\",{\\"engine\\":\\"oidn\\",\\"use_n_input\\":true,\\"use_albedo_input\\":true}]"    "Intel OIDN Denoiser"                         "[\\"denoise\\",{\\"engine\\":\\"optix\\",\\"use_n_input\\":true,\\"use_albedo_input\\":true}]"   "nVidia Optix Denoiser"                         "[\\"ocio\\",{\\"output\\":\\"sRGB\\"}]"                                                      "OCIO sRGB"                         "[\\"ocio\\",{\\"output\\":\\"rec709\\"}]"                                                    "OCIO rec709"                         "[\\"uv_enlarger\\",{\\"scheme\\":\\"avgfill\\",\\"borderpixels\\":4}]"                         "UV Average Fill"                         "[\\"uv_enlarger\\",{\\"scheme\\":\\"floodfill\\",\\"borderpixels\\":4}]"                       "UV Flood Fill"                         "[\\"uv_enlarger\\",{\\"scheme\\":\\"diffusefill\\",\\"borderpixels\\":4}]"                     "UV Diffuse Fill"                     }                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalpixelfilter_control_wpbg"                     label   "Pixel Filter"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalpixelfilter_vcbg"                     label   "Pixel Filter"                     type    string                     default { "gauss" }                     disablewhen "{ xn__karmaglobalpixelfilter_control_wpbg == block } { xn__karmaglobalpixelfilter_control_wpbg == none }"                     menureplace {                         "box"       "Box Filter"                         "gauss"     "Gaussian Filter"                         "blackman"  "Blackman Filter"                         "mitchell"  "Mitchell Filter"                     }                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalpixelfiltersize_control_fwbg"                     label   "Pixel Filter Size"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalpixelfiltersize_ejbg"                     label   "Pixel Filter Size"                     type    float                     default { "2" }                     disablewhen "{ xn__karmaglobalpixelfiltersize_control_fwbg == block } { xn__karmaglobalpixelfiltersize_control_fwbg == none }"                     range   { 1 5 }                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalsamplefilter_control_jrbg"                     label   "Sample Filter"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalsamplefilter_iebg"                     label   "Sample Filter"                     type    string                     default { "" }                     disablewhen "{ xn__karmaglobalsamplefilter_control_jrbg == block } { xn__karmaglobalsamplefilter_control_jrbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalpixeloracle_control_wpbg"                     label   "Pixel Oracle"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalpixeloracle_vcbg"                     label   "Pixel Oracle"                     type    string                     default { "variance" }                     disablewhen "{ xn__karmaglobalpixeloracle_control_wpbg == block } { xn__karmaglobalpixeloracle_control_wpbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobaluse_background_control_subg"                     label   "Use Background"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluse_background_rhbg"                     label   "Use Background"                     type    string                     default { "Auto" }                     disablewhen "{ xn__karmaglobaluse_background_control_subg == block } { xn__karmaglobaluse_background_control_subg == none }"                     menu {                         "Off"   "Off"                         "Auto"  "Auto"                         "On"    "On"                     }                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaglobalbackground_iprfilter_control_k4bg"                     label   "Background IPR Filter"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalbackground_iprfilter_jrbg"                     label   "Background IPR Filter"                     type    string                     default { "" }                     disablewhen "{ xn__karmaglobalbackground_iprfilter_control_k4bg == block } { xn__karmaglobalbackground_iprfilter_control_k4bg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }             }              groupcollapsible {                 name    "Advanced"                 label   "Advanced"                 parmtag { "group_default" "0" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobalusecacheratio_control_5sbg"                     label   "Cache Limit"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalusecacheratio_4fbg"                     label   "Cache Limit"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaglobalusecacheratio_control_5sbg == block } { xn__karmaglobalusecacheratio_control_5sbg == none }"                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalcacheratio_control_9nbg"                     label   "Cache Memory Ratio"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalcacheratio_89ag"                     label   "Cache Memory Ratio"                     type    float                     default { "0.25" }                     disablewhen "{ xn__karmaglobalcacheratio_control_9nbg == block } { xn__karmaglobalcacheratio_control_9nbg == none }"                     range   { 0.0001! 1! }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobalcachesize_control_nmbg"                     label   "Cache Size (MB)"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalcachesize_m8ag"                     label   "Cache Size (MB)"                     type    integer                     default { "1000" }                     disablewhen "{ xn__karmaglobalcachesize_control_nmbg == block } { xn__karmaglobalcachesize_control_nmbg == none }"                     range   { 1! 32000 }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobaloverrideobject_control_subg"                     label   "Override Object Settings"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaloverrideobject_rhbg"                     label   "Override Object Settings"                     type    string                     default { "" }                     disablewhen "{ xn__karmaglobaloverrideobject_control_subg == block } { xn__karmaglobaloverrideobject_control_subg == none }"                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalrandomseed_control_9nbg"                     label   "Random Seed"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalrandomseed_89ag"                     label   "Random Seed"                     type    integer                     default { "0" }                     disablewhen "{ xn__karmaglobalrandomseed_control_9nbg == block } { xn__karmaglobalrandomseed_control_9nbg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobalabortmissingtexture_control_x2bg"                     label   "Cancel Render on Missing Texture"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalabortmissingtexture_wpbg"                     label   "Cancel Render on Missing Texture"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaglobalabortmissingtexture_control_x2bg == block } { xn__karmaglobalabortmissingtexture_control_x2bg == none }"                     parmtag { "spare_category" "Rendering" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobalexportcomponents_control_1xbg"                     label   "Export Components"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalexportcomponents_0kbg"                     label   "Export Components"                     type    string                     default { "diffuse reflect coat refract volume sss" }                     disablewhen "{ xn__karmaglobalexportcomponents_control_1xbg == block } { xn__karmaglobalexportcomponents_control_1xbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobaldiffusecomponents_control_ozbg"                     label   "Diffuse Components"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaldiffusecomponents_nmbg"                     label   "Diffuse Components"                     type    string                     default { "diffuse" }                     disablewhen "{ xn__karmaglobaldiffusecomponents_control_ozbg == block } { xn__karmaglobaldiffusecomponents_control_ozbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalrefractcomponents_control_ozbg"                     label   "Refract Components"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalrefractcomponents_nmbg"                     label   "Refract Components"                     type    string                     default { "refract" }                     disablewhen "{ xn__karmaglobalrefractcomponents_control_ozbg == block } { xn__karmaglobalrefractcomponents_control_ozbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalvolumecomponents_control_1xbg"                     label   "Volume Components"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalvolumecomponents_0kbg"                     label   "Volume Components"                     type    string                     default { "volume" }                     disablewhen "{ xn__karmaglobalvolumecomponents_control_1xbg == block } { xn__karmaglobalvolumecomponents_control_1xbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaglobalssscomponents_control_5sbg"                     label   "SSS Components"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobalssscomponents_4fbg"                     label   "SSS Components"                     type    string                     default { "sss" }                     disablewhen "{ xn__karmaglobalssscomponents_control_5sbg == block } { xn__karmaglobalssscomponents_control_5sbg == none }"                     parmtag { "spare_category" "Image" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }             }              groupcollapsible {                 name    "xn__TextureBaking_vma"                 label   "Texture Baking"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaglobaluvunwrap_type_control_5sbg"                     label   "Texture Baking Type"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_type_4fbg"                     label   "Texture Baking Type"                     type    string                     default { "UDIM" }                     disablewhen "{ xn__karmaglobaluvunwrap_type_control_5sbg == block } { xn__karmaglobaluvunwrap_type_control_5sbg == none }"                     menu {                         "UDIM"  "UDIM"                         "PTex"  "PTex"                     }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_object_id_control_b1bg"                     label   "Texture Baking Object ID"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_object_id_9nbg"                     label   "Texture Baking Object ID"                     type    integer                     default { "-1" }                     disablewhen "{ xn__karmaglobaluvunwrap_object_id_control_b1bg == block } { xn__karmaglobaluvunwrap_object_id_control_b1bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_texture_tile_control_65bg"                     label   "Texture Baking Tile"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_texture_tile_5sbg"                     label   "Texture Baking Tile"                     type    integer                     default { "-1" }                     disablewhen "{ xn__karmaglobaluvunwrap_texture_tile_control_65bg == block } { xn__karmaglobaluvunwrap_texture_tile_control_65bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_min_res_control_65bg"                     label   "Texture Baking PTex Minimum Resolution"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int2\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_min_res_5sbg"                     label   "Texture Baking PTex Minimum Resolution"                     type    integer                     size    2                     default { "1280" "1280" }                     disablewhen "{ xn__karmaglobaluvunwrap_ptex_min_res_control_65bg == block } { xn__karmaglobaluvunwrap_ptex_min_res_control_65bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int2" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_max_res_control_65bg"                     label   "Texture Baking PTex Maximum Resolution"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int2\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_max_res_5sbg"                     label   "Texture Baking PTex Maximum Resolution"                     type    integer                     size    2                     default { "1280" "1280" }                     disablewhen "{ xn__karmaglobaluvunwrap_ptex_max_res_control_65bg == block } { xn__karmaglobaluvunwrap_ptex_max_res_control_65bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int2" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_small_pct_control_g9bg"                     label   "Texture Baking PTex Small Face Percent"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_small_pct_fwbg"                     label   "Texture Baking PTex Small Face Percent"                     type    float                     default { "0" }                     disablewhen "{ xn__karmaglobaluvunwrap_ptex_small_pct_control_g9bg == block } { xn__karmaglobaluvunwrap_ptex_small_pct_control_g9bg == none }"                     range   { 0! 1! }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_rel_scale_control_g9bg"                     label   "Texture Baking PTex Relative Scaling"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_rel_scale_fwbg"                     label   "Texture Baking PTex Relative Scaling"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaglobaluvunwrap_ptex_rel_scale_control_g9bg == block } { xn__karmaglobaluvunwrap_ptex_rel_scale_control_g9bg == none }"                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_scale_control_x2bg"                     label   "Texture Baking PTex Scale"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaglobaluvunwrap_ptex_scale_wpbg"                     label   "Texture Baking PTex Scale"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaglobaluvunwrap_ptex_scale_control_x2bg == block } { xn__karmaglobaluvunwrap_ptex_scale_control_x2bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }             }          }          group {             name    "global_1"             label   "Default Geometry Settings"              groupcollapsible {                 name    "xn__MotionBlur_6ja"                 label   "Motion Blur"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectmblur_control_4fbg"                     label   "Enable Motion Blur"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectmblur_31ag"                     label   "Enable Motion Blur"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaobjectmblur_control_4fbg == block } { xn__karmaobjectmblur_control_4fbg == none }"                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaobjectsamplesfromstage_control_1xbg"                     label   "Motion Samples From Stage"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectsamplesfromstage_0kbg"                     label   "Motion Samples From Stage"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaobjectsamplesfromstage_control_1xbg == block } { xn__karmaobjectsamplesfromstage_control_1xbg == none }"                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaobjectvblur_control_4fbg"                     label   "Velocity Blur"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvblur_31ag"                     label   "Velocity Blur"                     type    string                     default { "No Velocity Blur" }                     disablewhen "{ xn__karmaobjectvblur_control_4fbg == block } { xn__karmaobjectvblur_control_4fbg == none }"                     menu {                         "No Velocity Blur"  "No Velocity Blur"                         "Velocity Blur"     "Velocity Blur"                         "Acceleration Blur" "Acceleration Blur"                     }                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectgeosamples_control_9nbg"                     label   "Geometry Time Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectgeosamples_89ag"                     label   "Geometry Time Samples"                     type    integer                     default { "2" }                     disablewhen "{ xn__karmaobjectgeosamples_control_9nbg == block } { xn__karmaobjectgeosamples_control_9nbg == none }"                     range   { 1! 8 }                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaobjectxformsamples_control_jrbg"                     label   "Transform Time Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectxformsamples_iebg"                     label   "Transform Time Samples"                     type    integer                     default { "2" }                     disablewhen "{ xn__karmaobjectxformsamples_control_jrbg == block } { xn__karmaobjectxformsamples_control_jrbg == none }"                     range   { 1! 8 }                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaobjectinstance_vblur_control_subg"                     label   "Instance Velocity Blur"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectinstance_vblur_rhbg"                     label   "Instance Velocity Blur"                     type    string                     default { "No Velocity Blur" }                     disablewhen "{ xn__karmaobjectinstance_vblur_control_subg == block } { xn__karmaobjectinstance_vblur_control_subg == none }"                     menu {                         "No Velocity Blur"  "No Velocity Blur"                         "Velocity Blur"     "Velocity Blur"                         "Acceleration Blur" "Acceleration Blur"                     }                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectinstance_samples_control_1xbg"                     label   "Instance Motion Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectinstance_samples_0kbg"                     label   "Instance Motion Samples"                     type    integer                     default { "2" }                     disablewhen "{ xn__karmaobjectinstance_samples_control_1xbg == block } { xn__karmaobjectinstance_samples_control_1xbg == none }"                     range   { 1! 8 }                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaobjectvolumevblurscale_control_1xbg"                     label   "Volume Velocity Blur Scale"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumevblurscale_0kbg"                     label   "Volume Velocity Blur Scale"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectvolumevblurscale_control_1xbg == block } { xn__karmaobjectvolumevblurscale_control_1xbg == none }"                     range   { 0! 2 }                     parmtag { "spare_category" "Motion Blur" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }             }              groupcollapsible {                 name    "Sampling2"                 label   "Sampling"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectdiffusequality_control_subg"                     label   "Diffuse Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectdiffusequality_rhbg"                     label   "Diffuse Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectdiffusequality_control_subg == block } { xn__karmaobjectdiffusequality_control_subg == none }"                     range   { 0! 10 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectreflectquality_control_subg"                     label   "Reflection Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectreflectquality_rhbg"                     label   "Reflection Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectreflectquality_control_subg == block } { xn__karmaobjectreflectquality_control_subg == none }"                     range   { 0! 10 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectrefractquality_control_subg"                     label   "Refraction Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectrefractquality_rhbg"                     label   "Refraction Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectrefractquality_control_subg == block } { xn__karmaobjectrefractquality_control_subg == none }"                     range   { 0! 10 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvolumequality_control_5sbg"                     label   "Volume Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumequality_4fbg"                     label   "Volume Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectvolumequality_control_5sbg == block } { xn__karmaobjectvolumequality_control_5sbg == none }"                     range   { 0! 10 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectsssquality_control_9nbg"                     label   "SSS Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectsssquality_89ag"                     label   "SSS Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectsssquality_control_9nbg == block } { xn__karmaobjectsssquality_control_9nbg == none }"                     range   { 0! 10 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvolumesteprate_control_subg"                     label   "Volume Step Rate"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumesteprate_rhbg"                     label   "Volume Step Rate"                     type    float                     default { "0.25" }                     disablewhen "{ xn__karmaobjectvolumesteprate_control_subg == block } { xn__karmaobjectvolumesteprate_control_subg == none }"                     range   { 0! 1 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvolumesamplingchannel_control_65bg"                     label   "Volume Sampling Field"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumesamplingchannel_5sbg"                     label   "Volume Sampling Field"                     type    string                     default { "density" }                     disablewhen "{ xn__karmaobjectvolumesamplingchannel_control_65bg == block } { xn__karmaobjectvolumesamplingchannel_control_65bg == none }"                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaobjectlightsource_samplingquality_control_ygcg"                     label   "Light Sampling Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectlightsource_samplingquality_x2bg"                     label   "Light Sampling Quality"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectlightsource_samplingquality_control_ygcg == block } { xn__karmaobjectlightsource_samplingquality_control_ygcg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvarianceaa_thresh_control_ozbg"                     label   " Secondary Noise Level"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvarianceaa_thresh_nmbg"                     label   " Secondary Noise Level"                     type    float                     default { "0.01" }                     disablewhen "{ xn__karmaobjectvarianceaa_thresh_control_ozbg == block } { xn__karmaobjectvarianceaa_thresh_control_ozbg == none }"                     range   { 0! 0.1 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvarianceaa_minsamples_control_65bg"                     label   " Min Secondary Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvarianceaa_minsamples_5sbg"                     label   " Min Secondary Samples"                     type    integer                     default { "1" }                     disablewhen "{ xn__karmaobjectvarianceaa_minsamples_control_65bg == block } { xn__karmaobjectvarianceaa_minsamples_control_65bg == none }"                     range   { 1! 9 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaobjectvarianceaa_maxsamples_control_65bg"                     label   " Max Secondary Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvarianceaa_maxsamples_5sbg"                     label   " Max Secondary Samples"                     type    integer                     default { "9" }                     disablewhen "{ xn__karmaobjectvarianceaa_maxsamples_control_65bg == block } { xn__karmaobjectvarianceaa_maxsamples_control_65bg == none }"                     range   { 1! 9 }                     parmtag { "spare_category" "Sampling" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }             }              groupcollapsible {                 name    "Limits"                 label   "Limits"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectdiffuselimit_control_jrbg"                     label   "Diffuse Limit"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectdiffuselimit_iebg"                     label   "Diffuse Limit"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectdiffuselimit_control_jrbg == block } { xn__karmaobjectdiffuselimit_control_jrbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     range   { 0! 32 }                     parmtag { "spare_category" "Limits" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectreflectlimit_control_jrbg"                     label   "Reflection Limit"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectreflectlimit_iebg"                     label   "Reflection Limit"                     type    float                     default { "4" }                     disablewhen "{ xn__karmaobjectreflectlimit_control_jrbg == block } { xn__karmaobjectreflectlimit_control_jrbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     range   { 0! 32 }                     parmtag { "spare_category" "Limits" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectrefractlimit_control_jrbg"                     label   "Refraction Limit"                     type    string                     default { "none" }                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectrefractlimit_iebg"                     label   "Refraction Limit"                     type    float                     default { "4" }                     disablewhen "{ xn__karmaobjectrefractlimit_control_jrbg == block } { xn__karmaobjectrefractlimit_control_jrbg == none }"                     hidewhen "{ xn__karmahydradisablelighting_rhbf == 1 }"                     range   { 0! 32 }                     parmtag { "spare_category" "Limits" }                     parmtag { "uiscope" "viewport" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvolumelimit_control_wpbg"                     label   "Volume Limit"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumelimit_vcbg"                     label   "Volume Limit"                     type    float                     default { "0" }                     disablewhen "{ xn__karmaobjectvolumelimit_control_wpbg == block } { xn__karmaobjectvolumelimit_control_wpbg == none }"                     range   { 0! 32 }                     parmtag { "spare_category" "Limits" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectssslimit_control_0kbg"                     label   "SSS Limit"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectssslimit_z6ag"                     label   "SSS Limit"                     type    float                     default { "0" }                     disablewhen "{ xn__karmaobjectssslimit_control_0kbg == block } { xn__karmaobjectssslimit_control_0kbg == none }"                     range   { 0! 32 }                     parmtag { "spare_category" "Limits" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }             }              groupcollapsible {                 name    "xn__UniformVolume_vma"                 label   "Uniform Volume"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectvolumeuniform_control_5sbg"                     label   "Uniform Volume"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumeuniform_4fbg"                     label   "Uniform Volume"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaobjectvolumeuniform_control_5sbg == block } { xn__karmaobjectvolumeuniform_control_5sbg == none }"                     parmtag { "spare_category" "Uniform Volume" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaobjectvolumeuniformdensity_control_k4bg"                     label   "Uniform Volume Density"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumeuniformdensity_jrbg"                     label   "Uniform Volume Density"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectvolumeuniformdensity_control_k4bg == block } { xn__karmaobjectvolumeuniformdensity_control_k4bg == none }"                     range   { 0! 1 }                     parmtag { "spare_category" "Uniform Volume" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectvolumeuniformsamples_control_k4bg"                     label   "Uniform Volume Samples"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectvolumeuniformsamples_jrbg"                     label   "Uniform Volume Samples"                     type    integer                     default { "4" }                     disablewhen "{ xn__karmaobjectvolumeuniformsamples_control_k4bg == block } { xn__karmaobjectvolumeuniformsamples_control_k4bg == none }"                     range   { 1! 8 }                     parmtag { "spare_category" "Uniform Volume" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }             }              groupcollapsible {                 name    "Shading2"                 label   "Shading"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectrendervisibility_control_1xbg"                     label   "Render Visibility"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectrendervisibility_0kbg"                     label   "Render Visibility"                     type    string                     default { "*" }                     disablewhen "{ xn__karmaobjectrendervisibility_control_1xbg == block } { xn__karmaobjectrendervisibility_control_1xbg == none }"                     menureplace {                         "*"                             "Visible to all"                         "primary"                       "Visible only to primary rays"                         "primary|shadow"                "Visible only to primary and shadow rays"                         "-primary"                      "Invisible to primary rays (Phantom)"                         "-diffuse"                      "Invisible to diffuse rays"                         "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                         ""                              "Invisible (Unrenderable)"                     }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaobjectcuspangle_control_nmbg"                     label   "Cusp Angle"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectcuspangle_m8ag"                     label   "Cusp Angle"                     type    float                     default { "60" }                     disablewhen "{ xn__karmaobjectcuspangle_control_nmbg == block } { xn__karmaobjectcuspangle_control_nmbg == none }"                     range   { 0! 90 }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectholdoutmode_control_wpbg"                     label   "Holdout Mode"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectholdoutmode_vcbg"                     label   "Holdout Mode"                     type    string                     default { "None" }                     disablewhen "{ xn__karmaobjectholdoutmode_control_wpbg == block } { xn__karmaobjectholdoutmode_control_wpbg == none }"                     menu {                         "None"          "None"                         "Matte"         "Matte"                         "Background"    "Background"                     }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectsmoothp_control_ejbg"                     label   "Fix Shadow Terminator"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectsmoothp_d5ag"                     label   "Fix Shadow Terminator"                     type    toggle                     default { "1" }                     disablewhen "{ xn__karmaobjectsmoothp_control_ejbg == block } { xn__karmaobjectsmoothp_control_ejbg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaobjectlpetag_control_rhbg"                     label   "LPE Tag"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectlpetag_q3ag"                     label   "LPE Tag"                     type    string                     default { "" }                     disablewhen "{ xn__karmaobjectlpetag_control_rhbg == block } { xn__karmaobjectlpetag_control_rhbg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }                 parm {                     name    "xn__karmaobjectlightsubset_control_wpbg"                     label   "Direct Refraction Subset"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectlightsubset_vcbg"                     label   "Direct Refraction Subset"                     type    string                     default { "Outside" }                     disablewhen "{ xn__karmaobjectlightsubset_control_wpbg == block } { xn__karmaobjectlightsubset_control_wpbg == none }"                     menu {                         "Outside"   "Outside"                         "Inside"    "Inside"                         "Both"      "Both"                         "None"      "None"                     }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectcausticsenable_control_subg"                     label   " Enable Caustics"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectcausticsenable_rhbg"                     label   " Enable Caustics"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaobjectcausticsenable_control_subg == block } { xn__karmaobjectcausticsenable_control_subg == none }"                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaobjectcausticsroughnessclamp_control_t7bg"                     label   " Caustics Roughness Clamp"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectcausticsroughnessclamp_subg"                     label   " Caustics Roughness Clamp"                     type    float                     default { "0.2" }                     disablewhen "{ xn__karmaobjectcausticsroughnessclamp_control_t7bg == block } { xn__karmaobjectcausticsroughnessclamp_control_t7bg == none }"                     range   { 0! 1! }                     parmtag { "spare_category" "Shading" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }             }              groupcollapsible {                 name    "Light"                 label   "Light"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjecttreat_as_lightsource_control_k4bg"                     label   "Treat As Light Source"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjecttreat_as_lightsource_jrbg"                     label   "Treat As Light Source"                     type    string                     default { "No" }                     disablewhen "{ xn__karmaobjecttreat_as_lightsource_control_k4bg == block } { xn__karmaobjecttreat_as_lightsource_control_k4bg == none }"                     menu {                         "No"    "No"                         "Yes"   "Yes"                         "Auto"  "Auto"                     }                     parmtag { "spare_category" "Light" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectlightsource_diffusescale_control_2bcg"                     label   "Light Source Diffuse Multiplier"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectlightsource_diffusescale_1xbg"                     label   "Light Source Diffuse Multiplier"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectlightsource_diffusescale_control_2bcg == block } { xn__karmaobjectlightsource_diffusescale_control_2bcg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Light" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectlightsource_specularscale_control_pdcg"                     label   "Light Source Specular Multiplier"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectlightsource_specularscale_ozbg"                     label   "Light Source Specular Multiplier"                     type    float                     default { "1" }                     disablewhen "{ xn__karmaobjectlightsource_specularscale_control_pdcg == block } { xn__karmaobjectlightsource_specularscale_control_pdcg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Light" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }                 parm {                     name    "xn__karmaobjectisportal_control_0kbg"                     label   "Is Portal"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectisportal_z6ag"                     label   "Is Portal"                     type    toggle                     default { "0" }                     disablewhen "{ xn__karmaobjectisportal_control_0kbg == block } { xn__karmaobjectisportal_control_0kbg == none }"                     parmtag { "spare_category" "Light" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "bool" }                 }                 parm {                     name    "xn__karmaobjectportaldomelights_control_1xbg"                     label   "Portal Dome Lights"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectportaldomelights_0kbg"                     label   "Portal Dome Lights"                     type    string                     default { "*" }                     disablewhen "{ xn__karmaobjectportaldomelights_control_1xbg == block } { xn__karmaobjectportaldomelights_control_1xbg == none }"                     parmtag { "spare_category" "Light" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "string" }                 }             }              groupcollapsible {                 name    "Geometry"                 label   "Geometry"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectpoint_style_control_wpbg"                     label   "Render Points As"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectpoint_style_vcbg"                     label   "Render Points As"                     type    string                     default { "Spheres" }                     disablewhen "{ xn__karmaobjectpoint_style_control_wpbg == block } { xn__karmaobjectpoint_style_control_wpbg == none }"                     menu {                         "Discs"             "Discs"                         "Spheres"           "Spheres"                         "Oriented Discs"    "Oriented Discs"                     }                     parmtag { "spare_category" "Geometry" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectcurve_style_control_wpbg"                     label   "Render Curves As"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectcurve_style_vcbg"                     label   "Render Curves As"                     type    string                     default { "Rounded Curves" }                     disablewhen "{ xn__karmaobjectcurve_style_control_wpbg == block } { xn__karmaobjectcurve_style_control_wpbg == none }"                     menu {                         "Flat Ribbons"      "Flat Ribbons"                         "Rounded Curves"    "Rounded Curves"                         "Oriented Ribbons"  "Oriented Ribbons"                     }                     parmtag { "spare_category" "Geometry" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectcurve_basis_control_wpbg"                     label   "Override Curves Basis"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectcurve_basis_vcbg"                     label   "Override Curves Basis"                     type    string                     default { "Geometry Default" }                     disablewhen "{ xn__karmaobjectcurve_basis_control_wpbg == block } { xn__karmaobjectcurve_basis_control_wpbg == none }"                     menu {                         "Geometry Default"  "Geometry Default"                         "Force Linear"      "Force Linear"                         "Force Bezier"      "Force Bezier"                         "Force B-Spline"    "Force B-Spline"                         "Force Catmull-Rom" "Force Catmull-Rom"                     }                     parmtag { "spare_category" "Geometry" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }                 parm {                     name    "xn__karmaobjectcull_backface_control_5sbg"                     label   "Cull Backface"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectcull_backface_4fbg"                     label   "Cull Backface"                     type    string                     default { "Off" }                     disablewhen "{ xn__karmaobjectcull_backface_control_5sbg == block } { xn__karmaobjectcull_backface_control_5sbg == none }"                     menu {                         "Off"               "Off"                         "Cull Backface"     "Cull Backface"                         "Cull Frontface"    "Cull Frontface"                     }                     parmtag { "spare_category" "Geometry" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "token" }                 }             }              groupcollapsible {                 name    "Dicing2"                 label   "Dicing"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectdicingquality_control_5sbg"                     label   "Dicing Quality"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectdicingquality_4fbg"                     label   "Dicing Quality"                     type    float                     default { "0.5" }                     disablewhen "{ xn__karmaobjectdicingquality_control_5sbg == block } { xn__karmaobjectdicingquality_control_5sbg == none }"                     range   { 0! 16 }                     parmtag { "spare_category" "Dicing" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "float" }                 }             }              groupcollapsible {                 name    "xn__TextureBaking2_rna"                 label   "Texture Baking"                 parmtag { "group_default" "1" }                 grouptag { "group_type" "collapsible" }                  parm {                     name    "xn__karmaobjectuvunwrap_lowres_obj_control_x2bg"                     label   "Low Resolution Object ID"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectuvunwrap_lowres_obj_wpbg"                     label   "Low Resolution Object ID"                     type    integer                     default { "-1" }                     disablewhen "{ xn__karmaobjectuvunwrap_lowres_obj_control_x2bg == block } { xn__karmaobjectuvunwrap_lowres_obj_control_x2bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaobjectuvunwrap_cage_obj_control_ozbg"                     label   "Cage Object ID"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectuvunwrap_cage_obj_nmbg"                     label   "Cage Object ID"                     type    integer                     default { "-1" }                     disablewhen "{ xn__karmaobjectuvunwrap_cage_obj_control_ozbg == block } { xn__karmaobjectuvunwrap_cage_obj_control_ozbg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }                 parm {                     name    "xn__karmaobjectuvunwrap_highres_obj_control_k4bg"                     label   "High Resolution Object ID"                     type    string                     default { "none" }                     menujoin {                         [ "import loputils" ]                         [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                         language python                     }                     parmtag { "sidefx::look" "icon" }                 }                 parm {                     name    "xn__karmaobjectuvunwrap_highres_obj_jrbg"                     label   "High Resolution Object ID"                     type    integer                     default { "-1" }                     disablewhen "{ xn__karmaobjectuvunwrap_highres_obj_control_k4bg == block } { xn__karmaobjectuvunwrap_highres_obj_control_k4bg == none }"                     range   { 0 10 }                     parmtag { "spare_category" "Texture Baking" }                     parmtag { "uiscope" "None" }                     parmtag { "usdapischema" "KarmaRenderSettingsAPI" }                     parmtag { "usdvaluetype" "int" }                 }             }          }      }      parm {         name    "errorseverity"         baseparm         label   "Error Severity"         invisible         export  none     }     parm {         name    "errormsg"         baseparm         label   "Error Message"         invisible         export  none     }     parm {         name    "renderingColorSpace_control"         baseparm         label   "renderingColorSpace"         export  none     }     parm {         name    "renderingColorSpace"         baseparm         label   "Rendering Color Space"         export  none     }     parm {         name    "disableMotionBlur_control"         baseparm         label   "disableMotionBlur"         export  none     }     parm {         name    "disableMotionBlur"         baseparm         label   "Disable Motion Blur"         export  none     } ' $_stage_Lookdev_setup1_rendersettings2
chblockbegin
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 sample_f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropstart $_stage_Lookdev_setup1_rendersettings2/sample_f1
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 sample_f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F @ropend $_stage_Lookdev_setup1_rendersettings2/sample_f2
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 sample_f3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropinc $_stage_Lookdev_setup1_rendersettings2/sample_f3
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 errormsg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').renderProductAndSettingsErrorMessage()' -l p $_stage_Lookdev_setup1_rendersettings2/errormsg
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 xn__arnoldglobalAA_seed_06ag
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$F' $_stage_Lookdev_setup1_rendersettings2/xn__arnoldglobalAA_seed_06ag
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 xn__arnoldglobalcolor_family_linear_krbg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_stage_Lookdev_setup1_rendersettings2/xn__arnoldglobalcolor_family_linear_krbg
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 xn__arnoldglobalcolor_space_linear_xpbg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear' -l p $_stage_Lookdev_setup1_rendersettings2/xn__arnoldglobalcolor_space_linear_xpbg
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 xn__arnoldglobalcolor_family_narrow_krbg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_sRGB_family' -l p $_stage_Lookdev_setup1_rendersettings2/xn__arnoldglobalcolor_family_narrow_krbg
chadd -t 0 0 $_stage_Lookdev_setup1_rendersettings2 xn__arnoldglobalcolor_space_narrow_xpbg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_sRGB' -l p $_stage_Lookdev_setup1_rendersettings2/xn__arnoldglobalcolor_space_narrow_xpbg
chblockend
opparm -V 2.0 $_stage_Lookdev_setup1_rendersettings2 sample_f ( sample_f1 sample_f2 sample_f3 ) camera_control ( none ) res_mode ( manual ) resolution_control ( none ) resolution ( 1280 720 ) instantaneousShutter_control ( set ) settings2 ( 1 1 1 ) sampling ( 1 ) ray_depth ( 1 ) subdivision ( 1 ) shaders ( 1 ) texture ( 1 ) xn__arnoldglobaltexture_automip_control_2xbg ( set ) xn__arnoldglobaltexture_accept_untiled_control_h9bg ( set ) xn__arnoldglobaltexture_accept_unmipped_control_3bcg ( set ) xn__arnoldglobaltexture_auto_generate_tx_control_qdcg ( set ) xn__arnoldglobaltexture_use_existing_tx_control_3bcg ( set ) xn__arnoldglobaltexture_use_existing_tx_2xbg ( off ) device ( 1 ) system ( 1 ) diagnostics ( 1 ) Rendering ( 1 ) Sampling ( 1 ) xn__IndirectGuiding_ooa ( 1 ) Shading ( 1 ) xn__AmbientOcclusion_jpa ( 1 ) xn__TextureBaking_vma ( 1 ) xn__MotionBlur_6ja ( 1 ) Sampling2 ( 1 ) Limits ( 1 ) xn__UniformVolume_vma ( 1 ) Shading2 ( 1 ) Light ( 1 ) Geometry ( 1 ) Dicing2 ( 1 ) xn__TextureBaking2_rna ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -D off $_stage_Lookdev_setup1_rendersettings2
opexprlanguage -s hscript $_stage_Lookdev_setup1_rendersettings2
opuserdata -n '___Version___' -v '2.0' $_stage_Lookdev_setup1_rendersettings2

# Node $_stage_Lookdev_setup1_cam_2 (Lop/camera)
set _stage_Lookdev_setup1_cam_2 = `run("opadd -e -n -v camera cam_2")`
oplocate -x `$arg2 + 7.2839999999999998` -y `$arg3 + 3.1861999999999999` $_stage_Lookdev_setup1_cam_2
opspareds '    groupcollapsible {         name    "sample_group3"         label   "Frame Range/Subframes"         grouptag { "group_type" "collapsible" }         parmtag { "sidefx::header_parm" "sample_behavior" }          parm {             name    "sample_behavior"             baseparm             label   "Sampling Behavior"             export  none         }         parm {             name    "sample_f"             baseparm             label   "Start/End/Inc"             export  none         }         parm {             name    "sample_subframeenable"             baseparm             label   "Subframe Sampling"             export  none         }         groupsimple {             name    "sample_subframegroup3"             label   "Subframe Sampling"             disablewhen "{ sample_subframeenable == 0 }"             grouptag { "group_type" "simple" }             parmtag { "sidefx::header_toggle" "sample_subframeenable" }              parm {                 name    "sample_shuttermode"                 baseparm                 label   "Shutter"                 export  none             }             parm {                 name    "sample_shutterrange"                 baseparm                 label   "Shutter Open/Close"                 export  none             }             parm {                 name    "sample_cameraprim"                 baseparm                 label   "Camera Prim"                 export  none             }             parm {                 name    "sample_count"                 baseparm                 label   "Samples"                 export  none             }             parm {                 name    "sample_includeframe"                 baseparm                 label   "Always Include Frame Sample"                 export  none             }         }      }      parm {         name    "primpattern"         baseparm         label   "Primitives"         export  none     }     parm {         name    "primpath"         baseparm         label   "Primitive Path"         export  none     }     parm {         name    "createprims"         baseparm         label   "Action"         export  none     }     parm {         name    "initforedit"         baseparm         label   "Initialize Parameters"         export  none     }     parm {         name    "primcount"         baseparm         label   "Primitive Count"         invisible         export  none     }     parm {         name    "primtype"         baseparm         label   "Primitive Type"         invisible         export  none     }     parm {         name    "primkind"         baseparm         label   "Primitive Kind"         invisible         export  none     }     parm {         name    "specifier"         baseparm         label   "Primitive Specifier"         invisible         export  none     }     parm {         name    "classancestor"         baseparm         label   "Class Ancestor"         invisible         export  none     }     parm {         name    "parentprimtype"         baseparm         label   "Parent Primitive Type"         invisible         export  none     }     group {         name    "folder2"         label   "Transform"          parm {             name    "xn__xformOptransform_control_6fb"             baseparm             label   "xformOp:transform"             export  none         }         parm {             name    "xn__xformOptransform_51a"             baseparm             label   "xformOp:transform"             export  none         }         parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  none         }         parm {             name    "r"             baseparm             label   "Rotate"             export  none         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "shear"             baseparm             label   "Shear"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         groupcollapsible {             name    "parmgroup_pivotxform2"             label   "Pivot Transform"             disablewhen "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }"             grouptag { "group_type" "collapsible" }              parm {                 name    "p"                 baseparm                 label   "Pivot Translate"                 export  none             }             parm {                 name    "pr"                 baseparm                 label   "Pivot Rotate"                 export  none             }         }          groupcollapsible {             name    "folder3"             label   "Constraints"             grouptag { "group_type" "collapsible" }              parm {                 name    "lookatenable"                 baseparm                 label   "Enable Look At"                 export  none             }             parm {                 name    "keepposition"                 baseparm                 label   "Keep Position"                 export  none             }             parm {                 name    "lookatposition"                 baseparm                 label   "Look At Position"                 export  none             }             parm {                 name    "lookatprim"                 baseparm                 label   "Look At Primitive"                 export  none             }             parm {                 name    "lookatprimpos"                 baseparm                 label   "Look At Primitive Position"                 invisible                 export  none             }             parm {                 name    "lookatprimrot"                 baseparm                 label   "Look At Primitive Rotation"                 invisible                 export  none             }             parm {                 name    "upvecmethod"                 baseparm                 label   "Up Vector Method"                 export  none             }             parm {                 name    "upvec"                 baseparm                 label   "Up Vector"                 export  none             }             parm {                 name    "twist"                 baseparm                 label   "Twist"                 export  none             }         }      }      group {         name    "folder2_1"         label   "View"          parm {             name    "projection_control"             baseparm             label   "Projection"             export  none         }         parm {             name    "projection"             baseparm             label   "Projection"             export  none         }         parm {             name    "clippingRange_control"             baseparm             label   "Clipping Range"             export  none         }         parm {             name    "clippingRange"             baseparm             label   "Clipping Range"             export  none         }         parm {             name    "focalLength_control"             baseparm             label   "Focal Length"             export  none         }         parm {             name    "focalLength"             baseparm             label   "Focal Length"             export  none         }         parm {             name    "focalLengthConverted"             baseparm             label   "Focal Length (converted)"             invisible             export  none         }         groupsimple {             name    "aperture_folder2"             label   "Aperture"             grouptag { "group_type" "simple" }              parm {                 name    "aperture"                 baseparm                 label   "Control Aperture"                 export  none             }             parm {                 name    "horizontalAperture_control"                 baseparm                 label   "Horizontal Aperture"                 nolabel                 invisible                 export  none             }             parm {                 name    "horizontalAperture"                 baseparm                 label   "Horizontal Aperture"                 export  none             }             parm {                 name    "horizontalApertureConverted"                 baseparm                 label   "Horizontal Aperture (converted)"                 invisible                 export  none             }             parm {                 name    "verticalAperture_control"                 baseparm                 label   "Vertical Aperture"                 nolabel                 invisible                 export  none             }             parm {                 name    "verticalAperture"                 baseparm                 label   "Vertical Aperture"                 export  none             }             parm {                 name    "verticalApertureSwitch"                 baseparm                 label   "Vertical Aperture (switch)"                 invisible                 export  none             }             parm {                 name    "verticalApertureConverted"                 baseparm                 label   "Vertical Aperture (converted)"                 invisible                 export  none             }             parm {                 name    "aspectratio"                 baseparm                 label   "Aspect Ratio"                 joinnext                 export  none             }             parm {                 name    "resMenu"                 baseparm                 label   "Choose Aspect Ratio"                 export  none             }             groupcollapsible {                 name    "aperture_offset_folder2"                 label   "Offsets"                 grouptag { "group_type" "collapsible" }                  parm {                     name    "horizontalApertureOffset_control"                     baseparm                     label   "Horizontal Aperture Offset"                     export  none                 }                 parm {                     name    "horizontalApertureOffset"                     baseparm                     label   "Horizontal Aperture Offset"                     export  none                 }                 parm {                     name    "horizontalApertureOffsetConverted"                     baseparm                     label   "Horizontal Aperture Offset (converted)"                     invisible                     export  none                 }                 parm {                     name    "verticalApertureOffset_control"                     baseparm                     label   "Vertical Aperture Offset"                     export  none                 }                 parm {                     name    "verticalApertureOffset"                     baseparm                     label   "Vertical Aperture Offset"                     export  none                 }                 parm {                     name    "verticalApertureOffsetConverted"                     baseparm                     label   "Vertical Aperture Offset (converted)"                     invisible                     export  none                 }             }          }          groupsimple {             name    "viewport_folder2"             label   "Viewport Control"             grouptag { "group_type" "simple" }              parm {                 name    "xn__houdiniguidescale_control_thb"                 baseparm                 label   "houdini:guidescale"                 export  none             }             parm {                 name    "xn__houdiniguidescale_s3a"                 baseparm                 label   "Scale Guide Geometry"                 export  none             }             parm {                 name    "xn__houdiniinviewermenu_control_2kb"                 baseparm                 label   "Show in Viewport Camera Menu"                 export  none             }             parm {                 name    "xn__houdiniinviewermenu_16a"                 baseparm                 label   "Show in Viewport Camera Menu"                 export  none             }             parm {                 name    "xn__houdinibackgroundimage_control_ypb"                 baseparm                 label   "Background Image"                 export  none             }             parm {                 name    "xn__houdinibackgroundimage_xcb"                 baseparm                 label   "Background Image"                 export  none             }             parm {                 name    "xn__houdiniforegroundimage_control_ypb"                 baseparm                 label   "Foreground Image"                 export  none             }             parm {                 name    "xn__houdiniforegroundimage_xcb"                 baseparm                 label   "Foreground Image"                 export  none             }         }      }      group {         name    "folder2_2"         label   "Sampling"          parm {             name    "xn__shutteropen_control_16a"             baseparm             label   "Shutter Open"             export  none         }         parm {             name    "xn__shutteropen_0ta"             baseparm             label   "Shutter Open"             export  none         }         parm {             name    "xn__shutterclose_control_o8a"             baseparm             label   "Shutter Close"             export  none         }         parm {             name    "xn__shutterclose_nva"             baseparm             label   "Shutter Close"             export  none         }         parm {             name    "focusDistance_control"             baseparm             label   "Focus Distance"             export  none         }         parm {             name    "focusDistance"             baseparm             label   "Focus Distance"             export  none         }         parm {             name    "fStop_control"             baseparm             label   "F-Stop"             export  none         }         parm {             name    "fStop"             baseparm             label   "F-Stop"             export  none         }         parm {             name    "exposure_control"             baseparm             label   "Exposure"             export  none         }         parm {             name    "exposure"             baseparm             label   "Exposure"             export  none         }     }      group {         name    "folder2_3"         label   "Arnold"          groupcollapsible {             name    "camera"             label   "Camera"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__primvarsarnoldexposure_control_zpbg"                 label   "Exposure"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldexposure_ycbg"                 label   "Exposure"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldexposure_control_zpbg == block } { xn__primvarsarnoldexposure_control_zpbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_control_n4bg"                 label   "Radial Distortion"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_mrbg"                 label   "Radial Distortion"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldradial_distortion_control_n4bg == block } { xn__primvarsarnoldradial_distortion_control_n4bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_type_control_sdcg"                 label   "Radial Distortion Type"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldradial_distortion_type_rzbg"                 label   "Radial Distortion Type"                 type    string                 default { "cubic" }                 disablewhen "{ xn__primvarsarnoldradial_distortion_type_control_sdcg == block } { xn__primvarsarnoldradial_distortion_type_control_sdcg == none }"                 menu {                     "cubic"         "Cubic"                     "cubic_inverse" "Cubic Inverse"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__primvarsarnoldlens_tilt_angle_control_e1bg"                 label   "Lens Tilt"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float2\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldlens_tilt_angle_dobg"                 label   "Lens Tilt"                 type    vector2                 size    2                 default { "0" "0" }                 help    "Tilt the lens plane."                 disablewhen "{ xn__primvarsarnoldlens_tilt_angle_control_e1bg == block } { xn__primvarsarnoldlens_tilt_angle_control_e1bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float2" }             }             parm {                 name    "xn__primvarsarnoldlens_shift_control_8sbg"                 label   "Lens Shift"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float2\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldlens_shift_7fbg"                 label   "Lens Shift"                 type    vector2                 size    2                 default { "0" "0" }                 help    "Shift the lens plane."                 disablewhen "{ xn__primvarsarnoldlens_shift_control_8sbg == block } { xn__primvarsarnoldlens_shift_control_8sbg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float2" }             }         }          groupcollapsible {             name    "motion_blur"             label   "Motion Blur"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__primvarsarnoldshutter_type_control_iwbg"                 label   "Shutter Filter"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldshutter_type_hjbg"                 label   "Shutter Filter"                 type    string                 default { "box" }                 disablewhen "{ xn__primvarsarnoldshutter_type_control_iwbg == block } { xn__primvarsarnoldshutter_type_control_iwbg == none }"                 menu {                     "box"       "Box"                     "triangle"  "Triangle"                     "curve"     "Curve"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_control_e1bg"                 label   "Rolling Shutter"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_dobg"                 label   "Rolling Shutter"                 type    string                 default { "off" }                 disablewhen "{ xn__primvarsarnoldrolling_shutter_control_e1bg == block } { xn__primvarsarnoldrolling_shutter_control_e1bg == none }"                 menu {                     "off"       "Off"                     "top"       "Top"                     "bottom"    "Bottom"                     "left"      "Left"                     "right"     "Right"                 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "string" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_duration_control_1gcg"                 label   "Rolling Shutter Duration"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldrolling_shutter_duration_02bg"                 label   "Rolling Shutter Duration"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldrolling_shutter_duration_control_1gcg == block } { xn__primvarsarnoldrolling_shutter_duration_control_1gcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }         }          groupcollapsible {             name    "depth_of_field"             label   "Depth of Field"             parmtag { "group_default" "1" }             grouptag { "group_type" "collapsible" }              parm {                 name    "xn__primvarsarnoldaperture_blades_control_e1bg"                 label   "Aperture Blades"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'int\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_blades_dobg"                 label   "Aperture Blades"                 type    integer                 default { "0" }                 disablewhen "{ xn__primvarsarnoldaperture_blades_control_e1bg == block } { xn__primvarsarnoldaperture_blades_control_e1bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "int" }             }             parm {                 name    "xn__primvarsarnoldaperture_rotation_control_n4bg"                 label   "Aperture Rotation"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_rotation_mrbg"                 label   "Aperture Rotation"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldaperture_rotation_control_n4bg == block } { xn__primvarsarnoldaperture_rotation_control_n4bg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldaperture_blade_curvature_control_1gcg"                 label   "Aperture Blade Curvature"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_blade_curvature_02bg"                 label   "Aperture Blade Curvature"                 type    float                 default { "0" }                 disablewhen "{ xn__primvarsarnoldaperture_blade_curvature_control_1gcg == block } { xn__primvarsarnoldaperture_blade_curvature_control_1gcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldaperture_aspect_ratio_control_5bcg"                 label   "Aperture Aspect Ratio"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldaperture_aspect_ratio_4xbg"                 label   "Aperture Aspect Ratio"                 type    float                 default { "1" }                 disablewhen "{ xn__primvarsarnoldaperture_aspect_ratio_control_5bcg == block } { xn__primvarsarnoldaperture_aspect_ratio_control_5bcg == none }"                 range   { 0 10 }                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "float" }             }             parm {                 name    "xn__primvarsarnoldflat_field_focus_control_02bg"                 label   "Flat Field Focus"                 type    string                 nolabel                 default { "none" }                 menujoin {                     [ "import loputils" ]                     [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                     language python                 }                 parmtag { "sidefx::look" "icon" }             }             parm {                 name    "xn__primvarsarnoldflat_field_focus_zpbg"                 label   "Flat Field Focus"                 type    toggle                 default { "1" }                 disablewhen "{ xn__primvarsarnoldflat_field_focus_control_02bg == block } { xn__primvarsarnoldflat_field_focus_control_02bg == none }"                 parmtag { "spare_category" "Rendering" }                 parmtag { "uiscope" "None" }                 parmtag { "usdvaluetype" "bool" }             }         }      }      group {         name    "folder2_4"         label   "Karma"          parm {             name    "xn__karmacamerause_lensshader_control_subg"             label   "Use Lens Shader"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'bool\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacamerause_lensshader_rhbg"             label   "Use Lens Shader"             type    toggle             default { "0" }             disablewhen "{ xn__karmacamerause_lensshader_control_subg == block } { xn__karmacamerause_lensshader_control_subg == none }"             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "bool" }         }         parm {             name    "xn__karmacameralensshadervop_control_5sbg"             label   "Lens Shader VOP"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'string\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacameralensshadervop_4fbg"             label   "Lens Shader VOP"             type    oppath             default { "" }             disablewhen "{ xn__karmacameralensshadervop_control_5sbg == block } { xn__karmacameralensshadervop_control_5sbg == none }"             parmtag { "opfilter" "!!CUSTOM/MATERIAL!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "string" }         }         parm {             name    "xn__karmacameralensshader_89ag"             label   "Lens Shader"             type    string             invisible             default { [ "hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')).shaderString() if hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')) != None else \'\'" python ] }             disablewhen "{ xn__karmacameralensshader_control_9nbg == block } { xn__karmacameralensshader_control_9nbg == none }"             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "string" }         }         parm {             name    "xn__karmacamerawindow_control_rhbg"             label   "Screen Window"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float4\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacamerawindow_q3ag"             label   "Screen Window"             type    float             size    4             default { "-1" "1" "-1" "1" }             disablewhen "{ xn__karmacamerawindow_control_rhbg == block } { xn__karmacamerawindow_control_rhbg == none }"             range   { 0 10 }             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "float4" }         }         parm {             name    "xn__karmacameratint_control_iebg"             label   "Tint"             type    string             default { "none" }             menujoin {                 [ "import loputils" ]                 [ "return loputils.createEditPropertiesControlMenu(kwargs, \'float3\')" ]                 language python             }             parmtag { "sidefx::look" "icon" }         }         parm {             name    "xn__karmacameratint_h0ag"             label   "Tint"             type    color             size    3             default { "1" "1" "1" }             disablewhen "{ xn__karmacameratint_control_iebg == block } { xn__karmacameratint_control_iebg == none }"             range   { 0 10 }             parmtag { "spare_category" "View" }             parmtag { "uiscope" "None" }             parmtag { "usdapischema" "KarmaCameraAPI" }             parmtag { "usdvaluetype" "float3" }         }     }  ' $_stage_Lookdev_setup1_cam_2
chblockbegin
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 sample_f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropstart $_stage_Lookdev_setup1_cam_2/sample_f1
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 sample_f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F @ropend $_stage_Lookdev_setup1_cam_2/sample_f2
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 sample_f3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F @ropinc $_stage_Lookdev_setup1_cam_2/sample_f3
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 lookatprimposx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractTranslates()[0]' -l p $_stage_Lookdev_setup1_cam_2/lookatprimposx
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 lookatprimposy
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractTranslates()[1]' -l p $_stage_Lookdev_setup1_cam_2/lookatprimposy
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 lookatprimposz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractTranslates()[2]' -l p $_stage_Lookdev_setup1_cam_2/lookatprimposz
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 lookatprimrotx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractRotates()[0]' -l p $_stage_Lookdev_setup1_cam_2/lookatprimrotx
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 lookatprimroty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractRotates()[1]' -l p $_stage_Lookdev_setup1_cam_2/lookatprimroty
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 lookatprimrotz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import loputils\nfrom pxr import Usd, UsdGeom\n\nlop_node = hou.node(\'.\')\npath = lop_node.evalParm(\'lookatprim\')\nif not path:\n    return 0\n\nstage = lop_node.stage()\nlook_at_prim = stage.GetPrimAtPath(path)\n\nif look_at_prim is None or not look_at_prim.IsA(UsdGeom.Imageable):\n    return 0\n\nxform = loputils.getPrimXform(lop_node, path)\n\nreturn xform.extractRotates()[2]' -l p $_stage_Lookdev_setup1_cam_2/lookatprimrotz
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 focalLengthConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'focalLength\')' -l p $_stage_Lookdev_setup1_cam_2/focalLengthConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 horizontalAperture_control
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ifs(!strcmp(chs("aperture"), "setratio"), "set", chs("aperture"))' $_stage_Lookdev_setup1_cam_2/horizontalAperture_control
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 horizontalApertureConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'horizontalAperture\')' -l p $_stage_Lookdev_setup1_cam_2/horizontalApertureConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 verticalAperture_control
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ifs(!strcmp(chs("aperture"), "setratio"), "set", chs("aperture"))' $_stage_Lookdev_setup1_cam_2/verticalAperture_control
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 verticalApertureSwitch
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(!strcmp(chs("aperture"), "setratio"), ch("horizontalAperture") * ch("aspectratioy") / ch("aspectratiox"), ch("verticalAperture"))' $_stage_Lookdev_setup1_cam_2/verticalApertureSwitch
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 verticalApertureConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'verticalApertureSwitch\')' -l p $_stage_Lookdev_setup1_cam_2/verticalApertureConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 horizontalApertureOffsetConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'horizontalApertureOffset\')' -l p $_stage_Lookdev_setup1_cam_2/horizontalApertureOffsetConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 verticalApertureOffsetConverted
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'loputils\').getConvertedCameraParmValue(pwd(), \'verticalApertureOffset\')' -l p $_stage_Lookdev_setup1_cam_2/verticalApertureOffsetConverted
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 xn__houdiniguidescale_s3a
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1 / __import__(\'loputils\').getMetersPerUnit(pwd())' -l p $_stage_Lookdev_setup1_cam_2/xn__houdiniguidescale_s3a
chadd -t 0 0 $_stage_Lookdev_setup1_cam_2 xn__karmacameralensshader_89ag
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')).shaderString() if hou.node(ch(\'xn__karmacameralensshadervop_4fbg\')) != None else \'\'' -l p $_stage_Lookdev_setup1_cam_2/xn__karmacameralensshader_89ag
chblockend
opparm -V 2.0 $_stage_Lookdev_setup1_cam_2 sample_f ( sample_f1 sample_f2 sample_f3 ) t ( -24.031940534003873 2.6782174686501805 12.541604130003435 ) r ( -2.2702692669548954 -62.27026298067017 4.101745160502679e-6 ) clippingRange ( 0.01 1e6 ) focalLength ( 80 ) aperture ( setratio ) folder2 ( 1 1 1 1 1 ) camera ( 1 ) motion_blur ( 1 ) depth_of_field ( 1 )
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_stage_Lookdev_setup1_cam_2
opset -d off -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -D off $_stage_Lookdev_setup1_cam_2
opexprlanguage -s hscript $_stage_Lookdev_setup1_cam_2
opuserdata -n '___Version___' -v '2.0' $_stage_Lookdev_setup1_cam_2

# Node $_stage_Lookdev_setup1_output0 (Lop/output)
set _stage_Lookdev_setup1_output0 = `run("opadd -e -n -v output output0")`
oplocate -x `$arg2 + 3.0864500120162965` -y `$arg3 + -4.8521457185871348` $_stage_Lookdev_setup1_output0
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -D off $_stage_Lookdev_setup1_output0
opexprlanguage -s hscript $_stage_Lookdev_setup1_output0
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_output0

# Node $_stage_Lookdev_setup1_merge1 (Lop/merge)
set _stage_Lookdev_setup1_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + 3.0853000000000002` -y `$arg3 + -3.2546599999999999` $_stage_Lookdev_setup1_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -D off $_stage_Lookdev_setup1_merge1
opexprlanguage -s hscript $_stage_Lookdev_setup1_merge1
opuserdata -n '___Version___' -v '20.0.547' $_stage_Lookdev_setup1_merge1

# Node $_stage_Lookdev_setup1_null1 (Lop/null)
set _stage_Lookdev_setup1_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -5.2244919895040889` -y `$arg3 + 5.1416569353732609` $_stage_Lookdev_setup1_null1
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -D off $_stage_Lookdev_setup1_null1
opexprlanguage -s hscript $_stage_Lookdev_setup1_null1
oporder -e sublayer2 setvariant3 setvariant4 merge_LDV_setup domelight5 mute_light cam_lookdev karmarendersettings rendersettings2 cam_2 output0 merge1 null1 
opcf ..
opset -p on $_stage_Lookdev_setup1

opcf $arg1
opwire -n $_stage_setvariant3 -0 $_stage_Lookdev_setup1
opcf $_stage_Lookdev_setup1
opwire -n $_stage_Lookdev_setup1_sublayer2 -0 $_stage_Lookdev_setup1_setvariant3
opwire -n $_stage_Lookdev_setup1_setvariant3 -0 $_stage_Lookdev_setup1_setvariant4
opwire -n $_stage_Lookdev_setup1_mute_light -0 $_stage_Lookdev_setup1_merge_LDV_setup
opwire -n $_stage_Lookdev_setup1_domelight5 -1 $_stage_Lookdev_setup1_merge_LDV_setup
opwire -n $_stage_Lookdev_setup1_cam_2 -2 $_stage_Lookdev_setup1_merge_LDV_setup
opwire -n $_stage_Lookdev_setup1_rendersettings2 -3 $_stage_Lookdev_setup1_merge_LDV_setup
opwire -n $_stage_Lookdev_setup1_setvariant4 -0 $_stage_Lookdev_setup1_mute_light
opwire -n $_stage_Lookdev_setup1_karmarendersettings -0 $_stage_Lookdev_setup1_rendersettings2
opwire -n $_stage_Lookdev_setup1_cam_lookdev -0 $_stage_Lookdev_setup1_cam_2
opwire -n $_stage_Lookdev_setup1_merge1 -0 $_stage_Lookdev_setup1_output0
opwire -n $_stage_Lookdev_setup1_null1 -0 $_stage_Lookdev_setup1_merge1
opwire -n $_stage_Lookdev_setup1_merge_LDV_setup -1 $_stage_Lookdev_setup1_merge1
opwire -n -i 0 -0 $_stage_Lookdev_setup1_null1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_stage_Lookdev_setup1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_stage_Lookdev_setup1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cam_comments" label="Camera Comments [test]" icon="OBJ_camera">
    <script scriptType="python"><![CDATA[# Add parameters to the camera
# https://www.linkedin.com/in/jose-gonzalezvfx/

# import os
import hou
import sys

from PySide2.QtWidgets import QDialog, QApplication, QLineEdit, QLabel, QPushButton, QCheckBox, QHBoxLayout, QVBoxLayout
from PySide2.QtCore import Qt


class UI(QDialog):
    """"""

    def __init__(self, parent=None):
        """Constructor"""
        super(UI, self).__init__(parent)
        main_layout = QVBoxLayout()
        self.setWindowTitle("Add parameters to camera")

        # Keep the window on top always
        self.setWindowFlags(self.windowFlags() | Qt.WindowStaysOnTopHint)

        # Get Houdini window style and apply to interface
        self.setStyleSheet(hou.qt.styleSheet())
        self.setProperty("houdiniStyle", True)

        # Create a path input
        camera_layout = QHBoxLayout()
        lbl = QLabel("Camera node:")
        self.camera = QLineEdit("")
        camera_layout.addWidget(lbl)
        camera_layout.addWidget(self.camera)
        camera_layout.setSpacing(10)

        # Create an extension input
        solver_layout = QHBoxLayout()
        lbl = QLabel("Node:")
        self.solver = QLineEdit("")
        solver_layout.addWidget(lbl)
        solver_layout.addWidget(self.solver)
        solver_layout.setSpacing(10)

        # Set a button to start
        self.buttonCreate = QPushButton('Create')

        # Set a button to delete old parms
        self.buttonAdd = QPushButton('Add')

        # Set a button to delete old parms
        self.buttonReset = QPushButton('Reset')

        # Add all the layout together
        main_layout.addLayout(camera_layout, stretch=1)
        main_layout.addLayout(solver_layout, stretch=1)
        main_layout.addWidget(self.buttonCreate)
        main_layout.addWidget(self.buttonAdd)
        main_layout.addWidget(self.buttonReset)
        self.setLayout(main_layout)

        # Start the main code
        self.buttonCreate.clicked.connect(self.createcomment)
        self.buttonAdd.clicked.connect(self.add)
        self.buttonReset.clicked.connect(self.reset)

    def getCameraNode(self):

        camera_path = self.camera.text()
        return hou.node(camera_path)

    def gettext(self):

        # Gets the camera and solver node
        solver_path = self.solver.text()
        solver = hou.node(solver_path)

        camera = self.getCameraNode()

        # Creates a list of parms from the selected node
        all_parms = solver.parms()

        # Initialize a dictionary and a list for the parms
        thisdict = {}
        parmlist = []

        i = 0

        # Iterates for each paramater, adds the name with the value in the dictionary, also adds the name to the list
        filter_word = ["Interpolation", "Position", "Value", "Visualization", "Control"]

        previousname = ""

        for parm in all_parms:
            name = parm.name()
            long_name = parm.description()

            if not any(x in long_name for x in filter_word):
                if "enable" not in name:

                    if long_name == previousname:

                        vectorname = name[:-1]
                        del parmlist[-1]
                        i -= 1
                        thisdict[
                            str(i)] = "data+=" + "'" + long_name + ": " + "'" + " + " + 'str(solver.parmTuple({}).eval())'.format(
                            "'" + vectorname + "'") + "+" + "'\\n'"
                        previousname = long_name
                        long_name += " (vector) "
                    else:
                        thisdict[
                            str(i)] = "data+=" + "'" + long_name + ": " + "'" + " + " + 'str(solver.parm({}).eval())'.format(
                            "'" + name + "'") + "+" + "'\\n'"
                        previousname = long_name

                    parmlist.append(long_name)
                    i += 1

        text = 'data=""' + "\n" + 'solver = hou.node({})'.format("'" + self.solver.text() + "'") + "\n"

        # Shows a list of all the parameters for the user to select which he wants
        selected = hou.ui.selectFromList(parmlist, exclusive=False, title='Import parameters',
                                         column_header="Parameters", num_visible_rows=10, clear_on_cancel=False)

        # Iterates for all the parms with the values from the ditionary and appends it to a string with a line jump
        for x in range(len(selected)):
            index = str(selected[x])
            text += thisdict[index] + '\n'

        return text

    def createcomment(self):

        text_out = self.gettext()

        camera = self.getCameraNode()

        text_out += "return data"

        if not camera.parm("vcomment"):
            # Add a string parameter to the camera input
            ptg = camera.parmTemplateGroup()
            parm_folder = hou.FolderParmTemplate('folder', 'Notes')
            parmtemplate = hou.StringParmTemplate('vcomment', 'Text', 1)
            parmtemplate.setTags({"editor": "1", "editorlang": "python"})
            parm_folder.addParmTemplate(parmtemplate)
            ptg.append(parm_folder)
            camera.setParmTemplateGroup(ptg)

            # Set the paramaters with the values in the string parameter as a expression
            camera.parm("vcomment").setExpression(text_out, hou.exprLanguage.Python)
        else:
            hou.ui.displayMessage("Please click 'Reset' to create new parameters or 'Add' to add new parameters",
                                  buttons=('OK',), severity=hou.severityType.Message, default_choice=0, close_choice=0,
                                  title="Select a node", details_expanded=False)

    def add(self):
        text_out = self.gettext()
        camera = self.getCameraNode()

        # Set the paramaters with the values in the string parameter
        current_text = camera.parm("vcomment").expression()
        old_out = current_text.split("\n", 1)[1]
        new_text = text_out + old_out

        camera.parm("vcomment").setExpression(new_text, hou.exprLanguage.Python)

    def reset(self):

        # Deletes the folder and the comment stored in the camera node
        camera = self.getCameraNode()

        ptg = camera.parmTemplateGroup()
        folder_to_delete = ptg.findFolder('Notes')
        ptg.remove(folder_to_delete)
        camera.setParmTemplateGroup(ptg)


# Starts the script window for the user
app = QApplication.instance()
if app is None:
    app = QApplication(sys.argv)
CommentUI = UI()
CommentUI.show()
]]></script>
  </tool>

  <tool name="tool_2" label="New Tool" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import sys
import toolutils
import loptoolutils
import inspect
from husd.shaderTranslator import *
# print(inspect.getfile(husd.shadertranslator))  #I used it to inspect where the module is located on disk



sceneviewer = toolutils.sceneViewer()
cwd = sceneviewer.pwd()
container = loptoolutils.getLopNodeContainer(cwd)
inputs = (cwd.displayNode(),) if cwd.displayNode() is not None else ()
# nodetype = 'domelight::2.0'
# newnode = loptoolutils.createLopNode(container, 'reference', inputs, 'x') #this creates a LOP node


'''
this is an example of the createLopNode
# newnode = createLopNode(container, nodetypename, inputs, nodename,
#                         exact_node_type, primstring=" ".join(primpaths),
#                         selection_parm_name=selection_parm_name,
#                         respect_insertion_point=in_point != None)

'''


# print(theShaderCache)
node = hou.node('/stage/null3')
stage = node.stage()
mat_path = '/shaderball/Materials/__mat'
shader_path = '/shaderball/Materials/__shd'
classA = PreviewShaderTranslator()
print(classA.createMaterialShader(stage, mat_path, shader_path, 0))]]></script>
  </tool>

  <shelfSetEdit name="solaris_1" fileLocation="C:/PROGRA~1/SIDEEF~1/Houdini 20.0.547/houdini/toolbar/Solaris.shelf">
    <addMemberToolshelf name="My_shelf_1" inPosition="2"/>
  </shelfSetEdit>
</shelfDocument>
